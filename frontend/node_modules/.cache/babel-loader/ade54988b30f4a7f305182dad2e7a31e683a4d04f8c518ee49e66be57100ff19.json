{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\pages\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param1,\n    param2\n  } = useParams();\n  const location = useLocation();\n  const [content, setContent] = useState([]);\n  const [pageTitle, setPageTitle] = useState('');\n  const [files, setFiles] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const letterMappingAbbreviations = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    J: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    E: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  const letterMappingBibliography = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    E: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    YE: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  useEffect(() => {\n    const fetchContent = async () => {\n      let url = '';\n\n      // Checking if we're on a bibliography page by looking for 'biblio' in the path\n      if (location.pathname.includes('/site/biblio')) {\n        const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\n        fetchBibliographyArticles(russianLetter);\n        return; // Exit early since we're handling bibliography content\n      } else if (location.pathname.includes('abbreviation')) {\n        // Handle abbreviation content\n        const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\n        fetchAbbreviations(russianLetter);\n        return;\n      } else if (location.pathname.includes('/site/article/') && param2) {\n        fetchArticleDetailsAndPhotos(param2);\n      } else {\n        url = `http://localhost:1337/paths/${param1}/${param2}`;\n      }\n      adjustPageTitleBasedOnPath();\n      try {\n        if (url) {\n          const response = await fetch(url);\n          const data = await response.json();\n          setContent(data);\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n      }\n    };\n    const fetchContentAndPhotos = async () => {\n      // Checking if we're on an article page\n      if (location.pathname.includes('/site/article/') && param2) {\n        await fetchArticleByAId(param2); // Fetch article by ID\n        await fetchPhotosForArticle(param2); // Fetch photos for the article\n      }\n      // Handle other paths as before\n    };\n    const fetchSpecificFiles = async () => {\n      let startId, endId;\n      if (location.pathname.includes('/occupation/verigin')) {\n        startId = 3;\n        endId = 7;\n      } else if (location.pathname.includes('/site/article/83')) {\n        startId = 8;\n        endId = 33;\n      }\n      if (startId && endId) {\n        try {\n          const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\n          const data = await response.json();\n          setFiles(data);\n        } catch (error) {\n          console.error('Error fetching files:', error);\n        }\n      }\n    };\n    fetchContent();\n    fetchSpecificFiles();\n    // fetchContentAndPhotos();\n  }, [param1, param2, location.pathname, location.search]);\n  const fetchArticleDetailsAndPhotos = async aId => {\n    try {\n      // Fetch article by ID\n      const articleResponse = await fetch(`http://localhost:1337/site/article/${aId}`);\n      const articleData = await articleResponse.json();\n      setContent(articleData); // Set the single article object\n      setPageTitle(articleData.a_title || '');\n\n      // Fetch photos for the article\n      const photosResponse = await fetch(`http://localhost:1337/photo/${aId}`);\n      const photosData = await photosResponse.json();\n      setPhotos(photosData); // Set the photos array\n      console.log('Fetched photo paths:', photosData.map(photo => photo.http_path_big));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const fetchFilesForRange = async (startId, endId) => {\n    try {\n      const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\n      const data = await response.json();\n      console.log(data);\n      setFiles(data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n  const adjustPageTitleBasedOnPath = () => {\n    const queryParams = new URLSearchParams(location.search);\n    const titleFromQuery = queryParams.get('title');\n    if (titleFromQuery) {\n      setPageTitle(titleFromQuery);\n    } else if (location.pathname.includes('/site/commander/front')) {\n      setPageTitle(\"Командующие Карельским фронтом\");\n    } else {\n      setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\n    }\n  };\n  const fetchAbbreviations = letter => {\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`).then(response => response.json()).then(data => {\n      console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\n      setContent(data);\n    }).catch(error => console.error('Error fetching abbreviations:', error));\n  };\n  const fetchArticleByAId = async aId => {\n    try {\n      const response = await fetch(`http://localhost:1337/site/article/${aId}`);\n      const data = await response.json();\n      setContent([data]); // Setting content with an array containing the fetched article\n      setPageTitle(data.a_title || ''); // Set page title to article's title\n    } catch (error) {\n      console.error('Error fetching article by ID:', error);\n    }\n  };\n  const fetchPhotosForArticle = async articleId => {\n    try {\n      const response = await fetch(`http://localhost:1337/photo/${articleId}`);\n      const data = await response.json();\n      setPhotos(data); // Set the photos state with fetched data\n      console.log('Fetched photo paths:', data.map(photo => photo.http_path_big)); // Log the paths of fetched photos\n    } catch (error) {\n      console.error('Error fetching photos:', error);\n    }\n  };\n  const fetchBibliographyArticles = russianLetter => {\n    // Assuming the existence of a correct API endpoint and the russianLetter is correctly mapped\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`).then(response => response.json()).then(data => {\n      setContent(data); // Assuming the API response directly provides the content array\n    }).catch(error => console.error('Error fetching bibliography articles:', error));\n  };\n  const shouldDisplayTitle = () => {\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : shouldDisplayTitle() ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/site/article/${item.a_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this) : null, !(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        dangerouslySetInnerHTML: {\n          __html: item.a_desc || item.a_text\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)), (location.pathname.includes('/occupation/verigin') || location.pathname.includes('/site/article/83')) && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.http_path,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.path_big,\n        alt: `Photo ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"oliCqWOvLrScHvok1ZG7+zCHRqU=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentPageMultiple","_s","param1","param2","location","content","setContent","pageTitle","setPageTitle","files","setFiles","photos","setPhotos","letterMappingAbbreviations","A","B","V","G","D","J","ZH","Z","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SCH","Y","E","YU","YA","letterMappingBibliography","YE","fetchContent","url","pathname","includes","russianLetter","toUpperCase","fetchBibliographyArticles","fetchAbbreviations","fetchArticleDetailsAndPhotos","adjustPageTitleBasedOnPath","response","fetch","data","json","error","console","fetchContentAndPhotos","fetchArticleByAId","fetchPhotosForArticle","fetchSpecificFiles","startId","endId","search","aId","articleResponse","articleData","a_title","photosResponse","photosData","log","map","photo","http_path_big","fetchFilesForRange","queryParams","URLSearchParams","titleFromQuery","get","charAt","slice","letter","then","catch","articleId","shouldDisplayTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","index","dangerouslySetInnerHTML","__html","a_text","to","a_id","a_desc","file","href","http_path","target","rel","title","src","path_big","alt","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/pages/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, Link } from 'react-router-dom';\r\n\r\nconst ContentPageMultiple = () => {\r\n  const { param1, param2 } = useParams();\r\n  const location = useLocation();\r\n  const [content, setContent] = useState([]);\r\n  const [pageTitle, setPageTitle] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [photos, setPhotos] = useState([]);\r\n  \r\n  const letterMappingAbbreviations = {\r\n  A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', J: 'Е', ZH: 'Ж', Z: 'З',\r\n  I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n  S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n  SCH: 'Щ', Y: 'Ы', E: 'Э', YU: 'Ю', YA: 'Я', };\r\n  const letterMappingBibliography = {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', E: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', YE: 'Э', YU: 'Ю', YA: 'Я', };\r\n\r\n    useEffect(() => {\r\n      const fetchContent = async () => {\r\n        let url = '';\r\n    \r\n        // Checking if we're on a bibliography page by looking for 'biblio' in the path\r\n        if (location.pathname.includes('/site/biblio')) {\r\n          const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\r\n          fetchBibliographyArticles(russianLetter);\r\n          return; // Exit early since we're handling bibliography content\r\n        }\r\n        else if (location.pathname.includes('abbreviation')) {\r\n          // Handle abbreviation content\r\n          const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\r\n          fetchAbbreviations(russianLetter);\r\n          return;\r\n        }\r\n        else if (location.pathname.includes('/site/article/') && param2) {\r\n          fetchArticleDetailsAndPhotos(param2);\r\n        }\r\n        else \r\n        {\r\n          url = `http://localhost:1337/paths/${param1}/${param2}`;\r\n        }\r\n        adjustPageTitleBasedOnPath();\r\n        \r\n        try {\r\n          if (url) {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setContent(data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching content:', error);\r\n        }\r\n      };\r\n\r\n      const fetchContentAndPhotos = async () => {\r\n        // Checking if we're on an article page\r\n        if (location.pathname.includes('/site/article/') && param2) {\r\n            await fetchArticleByAId(param2); // Fetch article by ID\r\n            await fetchPhotosForArticle(param2); // Fetch photos for the article\r\n        }\r\n        // Handle other paths as before\r\n    };\r\n\r\n      const fetchSpecificFiles = async () => {\r\n        let startId, endId;\r\n        if (location.pathname.includes('/occupation/verigin')) {\r\n          startId = 3;\r\n          endId = 7;\r\n        } else if (location.pathname.includes('/site/article/83')) {\r\n          startId = 8;\r\n          endId = 33;\r\n        }\r\n  \r\n        if (startId && endId) {\r\n          try {\r\n            const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\r\n            const data = await response.json();\r\n            setFiles(data);\r\n          } catch (error) {\r\n            console.error('Error fetching files:', error);\r\n          }\r\n        }\r\n      };\r\n\r\n\r\n      fetchContent();\r\n      fetchSpecificFiles();\r\n      // fetchContentAndPhotos();\r\n    }, [param1, param2, location.pathname, location.search]);\r\n\r\n\r\n    const fetchArticleDetailsAndPhotos = async (aId) => {\r\n      try {\r\n        // Fetch article by ID\r\n        const articleResponse = await fetch(`http://localhost:1337/site/article/${aId}`);\r\n        const articleData = await articleResponse.json();\r\n        setContent(articleData); // Set the single article object\r\n        setPageTitle(articleData.a_title || '');\r\n  \r\n        // Fetch photos for the article\r\n        const photosResponse = await fetch(`http://localhost:1337/photo/${aId}`);\r\n        const photosData = await photosResponse.json();\r\n        setPhotos(photosData); // Set the photos array\r\n        console.log('Fetched photo paths:', photosData.map(photo => photo.http_path_big));\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    const fetchFilesForRange = async (startId, endId) => {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setFiles(data);\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    };\r\n    \r\n    const adjustPageTitleBasedOnPath = () => {\r\n      const queryParams = new URLSearchParams(location.search);\r\n      const titleFromQuery = queryParams.get('title');\r\n      if (titleFromQuery) {\r\n        setPageTitle(titleFromQuery);\r\n      } else if (location.pathname.includes('/site/commander/front')) {\r\n        setPageTitle(\"Командующие Карельским фронтом\");\r\n      } else {\r\n        setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\r\n      }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n  const fetchAbbreviations = (letter) => {\r\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\r\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching abbreviations:', error));\r\n  };\r\n  \r\n  const fetchArticleByAId = async (aId) => {\r\n    try {\r\n        const response = await fetch(`http://localhost:1337/site/article/${aId}`);\r\n        const data = await response.json();\r\n        setContent([data]); // Setting content with an array containing the fetched article\r\n        setPageTitle(data.a_title || ''); // Set page title to article's title\r\n    } catch (error) {\r\n        console.error('Error fetching article by ID:', error);\r\n    }\r\n};\r\n\r\nconst fetchPhotosForArticle = async (articleId) => {\r\n    try {\r\n        const response = await fetch(`http://localhost:1337/photo/${articleId}`);\r\n        const data = await response.json();\r\n        setPhotos(data); // Set the photos state with fetched data\r\n        console.log('Fetched photo paths:', data.map(photo => photo.http_path_big)); // Log the paths of fetched photos\r\n    } catch (error) {\r\n        console.error('Error fetching photos:', error);\r\n    }\r\n};\r\n  \r\n\r\n  const fetchBibliographyArticles = (russianLetter) => {\r\n    // Assuming the existence of a correct API endpoint and the russianLetter is correctly mapped\r\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setContent(data); // Assuming the API response directly provides the content array\r\n      })\r\n      .catch(error => console.error('Error fetching bibliography articles:', error));\r\n  };\r\n  \r\n\r\n\r\n  const shouldDisplayTitle = () => {\r\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      <h1>{pageTitle}</h1>\r\n      {content.map((item, index) => (\r\n        <div key={index}>\r\n          {/* For /site/biblio and /site/abbreviation paths, display titles without links */}\r\n          {(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) ? (\r\n            <>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n              <div dangerouslySetInnerHTML={{ __html: item.a_text }} />\r\n            </>\r\n          ) : shouldDisplayTitle() ? (\r\n            <Link to={`/site/article/${item.a_id}`}>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n            </Link>\r\n          ) : null}\r\n          {/* Only display 'desc' div if item.a_desc or item.a_text is available, and we're not in a /site/biblio or /site/abbreviation path */}\r\n          {!(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) && (\r\n            <div className=\"desc\" dangerouslySetInnerHTML={{ __html: item.a_desc || item.a_text }} />\r\n          )}\r\n        </div>\r\n      ))}\r\n      {(location.pathname.includes('/occupation/verigin') || location.pathname.includes('/site/article/83')) && (\r\n        <ul>\r\n          {files.map((file, index) => (\r\n            <li key={index}>\r\n              <a href={file.http_path} target=\"_blank\" rel=\"noopener noreferrer\">{file.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {photos.map((photo, index) => (\r\n        <div key={index}>\r\n          <img src={photo.path_big} alt={`Photo ${index + 1}`} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n  \r\n  \r\n};\r\n\r\nexport default ContentPageMultiple;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}