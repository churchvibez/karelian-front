{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param1,\n    param2\n  } = useParams();\n  const location = useLocation();\n  const [content, setContent] = useState([]);\n  const [pageTitle, setPageTitle] = useState('');\n  const letterMappingAbbreviations = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    J: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    E: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  const letterMappingBibliography = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    E: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    YE: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  useEffect(() => {\n    const fetchContent = async () => {\n      let url = '';\n      if (location.pathname.includes('/site/article/')) {\n        fetchArticleByAId(param2);\n      } else if (location.pathname.includes('biblio') || location.pathname.includes('abbreviation')) {\n        const russianLetter = location.pathname.includes('abbreviation') ? letterMappingAbbreviations[param2.toUpperCase()] : letterMappingBibliography[param2.toUpperCase()];\n        url = `http://localhost:1337/site/${param1}/${russianLetter}`;\n      } else {\n        url = `http://localhost:1337/paths/${param1}/${param2}`;\n      }\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setContent(data);\n        // Conditionally set pageTitle based on specific URL paths\n        if (location.pathname.includes('/site/commander/front')) {\n          // Only set pageTitle if it's a specific condition, adjust as needed\n          setPageTitle(\"Your Specific Title Here or Leave Blank\"); // Set to specific title or leave blank if you're handling title differently\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n      }\n    };\n    fetchContent();\n  }, [param1, param2, location.pathname]);\n  const fetchAbbreviations = letter => {\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`).then(response => response.json()).then(data => {\n      console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\n      setContent(data);\n    }).catch(error => console.error('Error fetching abbreviations:', error));\n  };\n  const fetchArticleByAId = async aId => {\n    try {\n      const response = await fetch(`http://localhost:1337/site/article/${aId}`);\n      const data = await response.json();\n      console.log(\"Fetched data:\", data);\n      if (location.pathname.includes('/site/article/')) {\n        // If we're on a specific article page, set the pageTitle to that article's title.\n        setPageTitle(data.a_title);\n      }\n      setContent([data]); // Setting content with an array containing the fetched article\n    } catch (error) {\n      console.error('Error fetching article by ID:', error);\n    }\n  };\n  const fetchBibliographyArticles = letter => {\n    // Assuming letterMapping translates English letter to Russian for fetching\n    const russianLetter = letterMappingBibliography[letter.toUpperCase()] || letter;\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`).then(response => response.json()).then(data => {\n      setContent(data);\n    }).catch(error => console.error('Error fetching bibliography articles:', error));\n  };\n  const shouldUsePageTitleOnly = () => {\n    // If pageTitle and a_title are the same, or if pageTitle exists alongside a_title, prioritize pageTitle.\n    // Adjust this logic based on how pageTitle is set or determined.\n    return content.some(item => pageTitle.trim() === item.a_title.trim()) || pageTitle.trim() && content.some(item => item.a_title.trim());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [pageTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this), content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!shouldUsePageTitleOnly() && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/site/article/${item.a_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        dangerouslySetInnerHTML: {\n          __html: item.a_desc || item.a_text\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"mm/Q90Z21D1RaJ160GNMzo0c1Q0=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","Link","jsxDEV","_jsxDEV","ContentPageMultiple","_s","param1","param2","location","content","setContent","pageTitle","setPageTitle","letterMappingAbbreviations","A","B","V","G","D","J","ZH","Z","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SCH","Y","E","YU","YA","letterMappingBibliography","YE","fetchContent","url","pathname","includes","fetchArticleByAId","russianLetter","toUpperCase","response","fetch","data","json","error","console","fetchAbbreviations","letter","then","log","catch","aId","a_title","fetchBibliographyArticles","shouldUsePageTitleOnly","some","item","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","to","a_id","dangerouslySetInnerHTML","__html","a_desc","a_text","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, Link } from 'react-router-dom';\r\n\r\nconst ContentPageMultiple = () => {\r\n  const { param1, param2 } = useParams();\r\n  const location = useLocation();\r\n  const [content, setContent] = useState([]);\r\n  const [pageTitle, setPageTitle] = useState('');\r\n  \r\n  const letterMappingAbbreviations = {\r\n  A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', J: 'Е', ZH: 'Ж', Z: 'З',\r\n  I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n  S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n  SCH: 'Щ', Y: 'Ы', E: 'Э', YU: 'Ю', YA: 'Я', };\r\n  const letterMappingBibliography = {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', E: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', YE: 'Э', YU: 'Ю', YA: 'Я', };\r\n\r\n    useEffect(() => {\r\n    const fetchContent = async () => {\r\n      let url = '';\r\n  \r\n      if (location.pathname.includes('/site/article/')) {\r\n        fetchArticleByAId(param2);\r\n      } else if (location.pathname.includes('biblio') || location.pathname.includes('abbreviation')) {\r\n        const russianLetter = location.pathname.includes('abbreviation') ? \r\n                              letterMappingAbbreviations[param2.toUpperCase()] : \r\n                              letterMappingBibliography[param2.toUpperCase()];\r\n        url = `http://localhost:1337/site/${param1}/${russianLetter}`;\r\n      } else {\r\n        url = `http://localhost:1337/paths/${param1}/${param2}`;\r\n      }\r\n  \r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setContent(data);\r\n        // Conditionally set pageTitle based on specific URL paths\r\n        if (location.pathname.includes('/site/commander/front')) {\r\n          // Only set pageTitle if it's a specific condition, adjust as needed\r\n          setPageTitle(\"Your Specific Title Here or Leave Blank\"); // Set to specific title or leave blank if you're handling title differently\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching content:', error);\r\n      }\r\n    };\r\n\r\n    fetchContent();\r\n  }, [param1, param2, location.pathname]);\r\n    \r\n    \r\n\r\n  const fetchAbbreviations = (letter) => {\r\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\r\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching abbreviations:', error));\r\n  };\r\n  \r\n  const fetchArticleByAId = async (aId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:1337/site/article/${aId}`);\r\n      const data = await response.json();\r\n      console.log(\"Fetched data:\", data);\r\n      if (location.pathname.includes('/site/article/')) {\r\n        // If we're on a specific article page, set the pageTitle to that article's title.\r\n        setPageTitle(data.a_title);\r\n      }\r\n      setContent([data]); // Setting content with an array containing the fetched article\r\n    } catch (error) {\r\n      console.error('Error fetching article by ID:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchBibliographyArticles = (letter) => {\r\n    // Assuming letterMapping translates English letter to Russian for fetching\r\n    const russianLetter = letterMappingBibliography[letter.toUpperCase()] || letter;\r\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching bibliography articles:', error));\r\n  };\r\n\r\n\r\n  const shouldUsePageTitleOnly = () => {\r\n    // If pageTitle and a_title are the same, or if pageTitle exists alongside a_title, prioritize pageTitle.\r\n    // Adjust this logic based on how pageTitle is set or determined.\r\n    return content.some(item => pageTitle.trim() === item.a_title.trim()) || (pageTitle.trim() && content.some(item => item.a_title.trim()));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      {/* Always display pageTitle if set */}\r\n      {pageTitle && <h1>{pageTitle}</h1>}\r\n      {content.map((item, index) => (\r\n        <div key={index}>\r\n          {/* Conditional rendering based on whether we should use pageTitle only */}\r\n          {!shouldUsePageTitleOnly() && (\r\n            <Link to={`/site/article/${item.a_id}`}>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n            </Link>\r\n          )}\r\n          {/* Display description/content */}\r\n          <div className=\"desc\" dangerouslySetInnerHTML={{ __html: item.a_desc || item.a_text }} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentPageMultiple;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EACtC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMgB,0BAA0B,GAAG;IACnCC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC/DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC9DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAChEC,GAAG,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAK,CAAC;EAC7C,MAAMC,yBAAyB,GAAG;IAChC7B,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEsB,CAAC,EAAE,GAAG;IAAEpB,EAAE,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC/DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC9DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAChEC,GAAG,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEK,EAAE,EAAE,GAAG;IAAEH,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAK,CAAC;EAE9C5C,SAAS,CAAC,MAAM;IAChB,MAAM+C,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIC,GAAG,GAAG,EAAE;MAEZ,IAAItC,QAAQ,CAACuC,QAAQ,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QAChDC,iBAAiB,CAAC1C,MAAM,CAAC;MAC3B,CAAC,MAAM,IAAIC,QAAQ,CAACuC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,IAAIxC,QAAQ,CAACuC,QAAQ,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;QAC7F,MAAME,aAAa,GAAG1C,QAAQ,CAACuC,QAAQ,CAACC,QAAQ,CAAC,cAAc,CAAC,GAC1CnC,0BAA0B,CAACN,MAAM,CAAC4C,WAAW,CAAC,CAAC,CAAC,GAChDR,yBAAyB,CAACpC,MAAM,CAAC4C,WAAW,CAAC,CAAC,CAAC;QACrEL,GAAG,GAAI,8BAA6BxC,MAAO,IAAG4C,aAAc,EAAC;MAC/D,CAAC,MAAM;QACLJ,GAAG,GAAI,+BAA8BxC,MAAO,IAAGC,MAAO,EAAC;MACzD;MAEA,IAAI;QACF,MAAM6C,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,CAAC;QACjC,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC7C,UAAU,CAAC4C,IAAI,CAAC;QAChB;QACA,IAAI9C,QAAQ,CAACuC,QAAQ,CAACC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;UACvD;UACApC,YAAY,CAAC,yCAAyC,CAAC,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC,OAAO4C,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDX,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACvC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,CAACuC,QAAQ,CAAC,CAAC;EAIvC,MAAMW,kBAAkB,GAAIC,MAAM,IAAK;IACrC,MAAMT,aAAa,GAAGrC,0BAA0B,CAAC8C,MAAM,CAACR,WAAW,CAAC,CAAC,CAAC,IAAIQ,MAAM;IAChFN,KAAK,CAAE,2CAA0CH,aAAc,EAAC,CAAC,CAC9DU,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCK,IAAI,CAACN,IAAI,IAAI;MACZG,OAAO,CAACI,GAAG,CAAE,8DAA6DX,aAAc,EAAC,CAAC;MAC1FxC,UAAU,CAAC4C,IAAI,CAAC;IAClB,CAAC,CAAC,CACDQ,KAAK,CAACN,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMP,iBAAiB,GAAG,MAAOc,GAAG,IAAK;IACvC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCU,GAAI,EAAC,CAAC;MACzE,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCE,OAAO,CAACI,GAAG,CAAC,eAAe,EAAEP,IAAI,CAAC;MAClC,IAAI9C,QAAQ,CAACuC,QAAQ,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QAChD;QACApC,YAAY,CAAC0C,IAAI,CAACU,OAAO,CAAC;MAC5B;MACAtD,UAAU,CAAC,CAAC4C,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAGD,MAAMS,yBAAyB,GAAIN,MAAM,IAAK;IAC5C;IACA,MAAMT,aAAa,GAAGP,yBAAyB,CAACgB,MAAM,CAACR,WAAW,CAAC,CAAC,CAAC,IAAIQ,MAAM;IAC/EN,KAAK,CAAE,qCAAoCH,aAAc,EAAC,CAAC,CACxDU,IAAI,CAACR,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCK,IAAI,CAACN,IAAI,IAAI;MACZ5C,UAAU,CAAC4C,IAAI,CAAC;IAClB,CAAC,CAAC,CACDQ,KAAK,CAACN,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC,CAAC;EAClF,CAAC;EAGD,MAAMU,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACA;IACA,OAAOzD,OAAO,CAAC0D,IAAI,CAACC,IAAI,IAAIzD,SAAS,CAAC0D,IAAI,CAAC,CAAC,KAAKD,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC,IAAK1D,SAAS,CAAC0D,IAAI,CAAC,CAAC,IAAI5D,OAAO,CAAC0D,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAE;EAC1I,CAAC;EAGD,oBACElE,OAAA;IAAKmE,SAAS,EAAC,cAAc;IAAAC,QAAA,GAE1B5D,SAAS,iBAAIR,OAAA;MAAAoE,QAAA,EAAK5D;IAAS;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACjClE,OAAO,CAACmE,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBACvB1E,OAAA;MAAAoE,QAAA,GAEG,CAACL,sBAAsB,CAAC,CAAC,iBACxB/D,OAAA,CAACF,IAAI;QAAC6E,EAAE,EAAG,iBAAgBV,IAAI,CAACW,IAAK,EAAE;QAAAR,QAAA,eACrCpE,OAAA;UAAI6E,uBAAuB,EAAE;YAAEC,MAAM,EAAEb,IAAI,CAACJ;UAAQ;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CACP,eAEDxE,OAAA;QAAKmE,SAAS,EAAC,MAAM;QAACU,uBAAuB,EAAE;UAAEC,MAAM,EAAEb,IAAI,CAACc,MAAM,IAAId,IAAI,CAACe;QAAO;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GARjFE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtE,EAAA,CAnHID,mBAAmB;EAAA,QACIL,SAAS,EACnBC,WAAW;AAAA;AAAAoF,EAAA,GAFxBhF,mBAAmB;AAqHzB,eAAeA,mBAAmB;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}