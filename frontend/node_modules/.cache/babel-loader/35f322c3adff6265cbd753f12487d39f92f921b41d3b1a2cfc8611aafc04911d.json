{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentPage = () => {\n  _s();\n  const {\n    pathName\n  } = useParams();\n  const [pathInfo, setPathInfo] = useState(null);\n  useEffect(() => {\n    fetchPathInfo(pathName);\n  }, [pathName]);\n  const fetchPathInfo = pathName => {\n    // Fetch path information based on pathName\n    fetch(`http://localhost:1337/paths/${pathName}`).then(response => response.json()).then(data => {\n      setPathInfo(data);\n    }).catch(error => console.error('Error fetching path info:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Path Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), pathInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"p_path: \", pathInfo.p_path]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X: \", pathInfo.x]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Y: \", pathInfo.y]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPage, \"YqL5mhvffcRJ4WLtCjoubDXeSkc=\", false, function () {\n  return [useParams];\n});\n_c = ContentPage;\nexport default ContentPage;\nvar _c;\n$RefreshReg$(_c, \"ContentPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ContentPage","_s","pathName","pathInfo","setPathInfo","fetchPathInfo","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","p_path","x","y","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ContentPage = () => {\r\n  const { pathName } = useParams();\r\n  const [pathInfo, setPathInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPathInfo(pathName);\r\n  }, [pathName]);\r\n\r\n  const fetchPathInfo = (pathName) => {\r\n    // Fetch path information based on pathName\r\n    fetch(`http://localhost:1337/paths/${pathName}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setPathInfo(data);\r\n      })\r\n      .catch(error => console.error('Error fetching path info:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      <h2>Path Information</h2>\r\n      {pathInfo ? (\r\n        <div>\r\n          <p>p_path: {pathInfo.p_path}</p>\r\n          <p>X: {pathInfo.x}</p>\r\n          <p>Y: {pathInfo.y}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC;EAChC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdS,aAAa,CAACH,QAAQ,CAAC;EACzB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMG,aAAa,GAAIH,QAAQ,IAAK;IAClC;IACAI,KAAK,CAAE,+BAA8BJ,QAAS,EAAC,CAAC,CAC7CK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZN,WAAW,CAACM,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBhB,QAAQ,gBACPJ,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,GAAG,UAAQ,EAACZ,QAAQ,CAACiB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCpB,OAAA;QAAAgB,QAAA,GAAG,KAAG,EAACZ,QAAQ,CAACkB,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBpB,OAAA;QAAAgB,QAAA,GAAG,KAAG,EAACZ,QAAQ,CAACmB,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,gBAENpB,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCID,WAAW;EAAA,QACMH,SAAS;AAAA;AAAA0B,EAAA,GAD1BvB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}