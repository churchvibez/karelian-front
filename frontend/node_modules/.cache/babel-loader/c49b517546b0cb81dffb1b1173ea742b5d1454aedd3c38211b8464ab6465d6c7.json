{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_property_1 = require(\"react-property\");\nvar utilities_1 = require(\"./utilities\");\n// https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components\n// https://developer.mozilla.org/docs/Web/HTML/Attributes\nvar UNCONTROLLED_COMPONENT_ATTRIBUTES = ['checked', 'value'];\nvar UNCONTROLLED_COMPONENT_NAMES = ['input', 'select', 'textarea'];\nvar valueOnlyInputs = {\n  reset: true,\n  submit: true\n};\n/**\r\n * Converts HTML/SVG DOM attributes to React props.\r\n *\r\n * @param attributes - HTML/SVG DOM attributes.\r\n * @param nodeName - DOM node name.\r\n * @returns - React props.\r\n */\nfunction attributesToProps(attributes, nodeName) {\n  if (attributes === void 0) {\n    attributes = {};\n  }\n  var props = {};\n  var isInputValueOnly = Boolean(attributes.type && valueOnlyInputs[attributes.type]);\n  for (var attributeName in attributes) {\n    var attributeValue = attributes[attributeName];\n    // ARIA (aria-*) or custom data (data-*) attribute\n    if ((0, react_property_1.isCustomAttribute)(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    }\n    // convert HTML/SVG attribute to React prop\n    var attributeNameLowerCased = attributeName.toLowerCase();\n    var propName = getPropName(attributeNameLowerCased);\n    if (propName) {\n      var propertyInfo = (0, react_property_1.getPropertyInfo)(propName);\n      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\n      if (UNCONTROLLED_COMPONENT_ATTRIBUTES.includes(propName) && UNCONTROLLED_COMPONENT_NAMES.includes(nodeName) && !isInputValueOnly) {\n        propName = getPropName('default' + attributeNameLowerCased);\n      }\n      props[propName] = attributeValue;\n      switch (propertyInfo && propertyInfo.type) {\n        case react_property_1.BOOLEAN:\n          props[propName] = true;\n          break;\n        case react_property_1.OVERLOADED_BOOLEAN:\n          if (attributeValue === '') {\n            props[propName] = true;\n          }\n          break;\n      }\n      continue;\n    }\n    // preserve custom attribute if React >=16\n    if (utilities_1.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  }\n  // transform inline style to object\n  (0, utilities_1.setStyleProp)(attributes.style, props);\n  return props;\n}\nexports.default = attributesToProps;\n/**\r\n * Gets prop name from lowercased attribute name.\r\n *\r\n * @param attributeName - Lowercased attribute name.\r\n * @returns - Prop name.\r\n */\nfunction getPropName(attributeName) {\n  return react_property_1.possibleStandardNames[attributeName];\n}","map":{"version":3,"names":["react_property_1","require","utilities_1","UNCONTROLLED_COMPONENT_ATTRIBUTES","UNCONTROLLED_COMPONENT_NAMES","valueOnlyInputs","reset","submit","attributesToProps","attributes","nodeName","props","isInputValueOnly","Boolean","type","attributeName","attributeValue","isCustomAttribute","attributeNameLowerCased","toLowerCase","propName","getPropName","propertyInfo","getPropertyInfo","includes","BOOLEAN","OVERLOADED_BOOLEAN","PRESERVE_CUSTOM_ATTRIBUTES","setStyleProp","style","exports","default","possibleStandardNames"],"sources":["D:\\GIT\\projects\\tppo\\karelian-front\\frontend\\node_modules\\html-react-parser\\src\\attributes-to-props.ts"],"sourcesContent":["import {\r\n  BOOLEAN,\r\n  OVERLOADED_BOOLEAN,\r\n  getPropertyInfo,\r\n  isCustomAttribute,\r\n  possibleStandardNames,\r\n} from 'react-property';\r\nimport { PRESERVE_CUSTOM_ATTRIBUTES, setStyleProp } from './utilities';\r\n\r\n// https://react.dev/learn/sharing-state-between-components#controlled-and-uncontrolled-components\r\n// https://developer.mozilla.org/docs/Web/HTML/Attributes\r\nconst UNCONTROLLED_COMPONENT_ATTRIBUTES = ['checked', 'value'] as const;\r\nconst UNCONTROLLED_COMPONENT_NAMES = ['input', 'select', 'textarea'] as const;\r\n\r\ntype UncontrolledComponentAttributes =\r\n  (typeof UNCONTROLLED_COMPONENT_ATTRIBUTES)[number];\r\n\r\ntype UncontrolledComponentNames = (typeof UNCONTROLLED_COMPONENT_NAMES)[number];\r\n\r\nconst valueOnlyInputs = {\r\n  reset: true,\r\n  submit: true,\r\n} as const;\r\n\r\nexport type ValueOnlyInputsKeys = keyof typeof valueOnlyInputs;\r\n\r\nexport type Attributes = Record<PropertyKey, string>;\r\n\r\nexport type Props = Record<PropertyKey, string | boolean> & {\r\n  dangerouslySetInnerHTML?: {\r\n    __html: string;\r\n  };\r\n  key?: string | number;\r\n  style?: Record<PropertyKey, string>;\r\n};\r\n\r\n/**\r\n * Converts HTML/SVG DOM attributes to React props.\r\n *\r\n * @param attributes - HTML/SVG DOM attributes.\r\n * @param nodeName - DOM node name.\r\n * @returns - React props.\r\n */\r\nexport default function attributesToProps(\r\n  attributes: Attributes = {},\r\n  nodeName?: string,\r\n): Props {\r\n  const props: Props = {};\r\n\r\n  const isInputValueOnly = Boolean(\r\n    attributes.type && valueOnlyInputs[attributes.type as ValueOnlyInputsKeys],\r\n  );\r\n\r\n  for (const attributeName in attributes) {\r\n    const attributeValue = attributes[attributeName];\r\n\r\n    // ARIA (aria-*) or custom data (data-*) attribute\r\n    if (isCustomAttribute(attributeName)) {\r\n      props[attributeName] = attributeValue;\r\n      continue;\r\n    }\r\n\r\n    // convert HTML/SVG attribute to React prop\r\n    const attributeNameLowerCased = attributeName.toLowerCase();\r\n    let propName = getPropName(attributeNameLowerCased);\r\n\r\n    if (propName) {\r\n      const propertyInfo = getPropertyInfo(propName);\r\n\r\n      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\r\n      if (\r\n        UNCONTROLLED_COMPONENT_ATTRIBUTES.includes(\r\n          propName as UncontrolledComponentAttributes,\r\n        ) &&\r\n        UNCONTROLLED_COMPONENT_NAMES.includes(\r\n          nodeName! as UncontrolledComponentNames,\r\n        ) &&\r\n        !isInputValueOnly\r\n      ) {\r\n        propName = getPropName('default' + attributeNameLowerCased);\r\n      }\r\n\r\n      props[propName] = attributeValue;\r\n\r\n      switch (propertyInfo && propertyInfo.type) {\r\n        case BOOLEAN:\r\n          props[propName] = true;\r\n          break;\r\n        case OVERLOADED_BOOLEAN:\r\n          if (attributeValue === '') {\r\n            props[propName] = true;\r\n          }\r\n          break;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // preserve custom attribute if React >=16\r\n    if (PRESERVE_CUSTOM_ATTRIBUTES) {\r\n      props[attributeName] = attributeValue;\r\n    }\r\n  }\r\n\r\n  // transform inline style to object\r\n  setStyleProp(attributes.style, props);\r\n\r\n  return props;\r\n}\r\n\r\n/**\r\n * Gets prop name from lowercased attribute name.\r\n *\r\n * @param attributeName - Lowercased attribute name.\r\n * @returns - Prop name.\r\n */\r\nfunction getPropName(attributeName: string): string {\r\n  return possibleStandardNames[attributeName];\r\n}\r\n"],"mappings":";;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAOA,IAAAC,WAAA,GAAAD,OAAA;AAEA;AACA;AACA,IAAME,iCAAiC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAU;AACvE,IAAMC,4BAA4B,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAU;AAO7E,IAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;CACA;AAcV;;;;;;;AAOA,SAAwBC,iBAAiBA,CACvCC,UAA2B,EAC3BC,QAAiB;EADjB,IAAAD,UAAA;IAAAA,UAAA,KAA2B;EAAA;EAG3B,IAAME,KAAK,GAAU,EAAE;EAEvB,IAAMC,gBAAgB,GAAGC,OAAO,CAC9BJ,UAAU,CAACK,IAAI,IAAIT,eAAe,CAACI,UAAU,CAACK,IAA2B,CAAC,CAC3E;EAED,KAAK,IAAMC,aAAa,IAAIN,UAAU,EAAE;IACtC,IAAMO,cAAc,GAAGP,UAAU,CAACM,aAAa,CAAC;IAEhD;IACA,IAAI,IAAAf,gBAAA,CAAAiB,iBAAiB,EAACF,aAAa,CAAC,EAAE;MACpCJ,KAAK,CAACI,aAAa,CAAC,GAAGC,cAAc;MACrC;IACF;IAEA;IACA,IAAME,uBAAuB,GAAGH,aAAa,CAACI,WAAW,EAAE;IAC3D,IAAIC,QAAQ,GAAGC,WAAW,CAACH,uBAAuB,CAAC;IAEnD,IAAIE,QAAQ,EAAE;MACZ,IAAME,YAAY,GAAG,IAAAtB,gBAAA,CAAAuB,eAAe,EAACH,QAAQ,CAAC;MAE9C;MACA,IACEjB,iCAAiC,CAACqB,QAAQ,CACxCJ,QAA2C,CAC5C,IACDhB,4BAA4B,CAACoB,QAAQ,CACnCd,QAAuC,CACxC,IACD,CAACE,gBAAgB,EACjB;QACAQ,QAAQ,GAAGC,WAAW,CAAC,SAAS,GAAGH,uBAAuB,CAAC;MAC7D;MAEAP,KAAK,CAACS,QAAQ,CAAC,GAAGJ,cAAc;MAEhC,QAAQM,YAAY,IAAIA,YAAY,CAACR,IAAI;QACvC,KAAKd,gBAAA,CAAAyB,OAAO;UACVd,KAAK,CAACS,QAAQ,CAAC,GAAG,IAAI;UACtB;QACF,KAAKpB,gBAAA,CAAA0B,kBAAkB;UACrB,IAAIV,cAAc,KAAK,EAAE,EAAE;YACzBL,KAAK,CAACS,QAAQ,CAAC,GAAG,IAAI;UACxB;UACA;MACJ;MACA;IACF;IAEA;IACA,IAAIlB,WAAA,CAAAyB,0BAA0B,EAAE;MAC9BhB,KAAK,CAACI,aAAa,CAAC,GAAGC,cAAc;IACvC;EACF;EAEA;EACA,IAAAd,WAAA,CAAA0B,YAAY,EAACnB,UAAU,CAACoB,KAAK,EAAElB,KAAK,CAAC;EAErC,OAAOA,KAAK;AACd;AAhEAmB,OAAA,CAAAC,OAAA,GAAAvB,iBAAA;AAkEA;;;;;;AAMA,SAASa,WAAWA,CAACN,aAAqB;EACxC,OAAOf,gBAAA,CAAAgC,qBAAqB,CAACjB,aAAa,CAAC;AAC7C"},"metadata":{},"sourceType":"script","externalDependencies":[]}