{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentPage = () => {\n  _s();\n  const {\n    pathName\n  } = useParams();\n  const [categoryContent, setCategoryContent] = useState('');\n  useEffect(() => {\n    fetchCategoryContent(pathName);\n  }, [pathName]);\n  const fetchCategoryContent = pathName => {\n    console.log(\"Fetching content for pathName:\", pathName);\n    const pathParts = pathName.split('/'); // Split the pathName by '/'\n    const lastPathPart = pathParts[pathParts.length - 1]; // Get the last part of the path\n    const newPathName = lastPathPart ? `/${lastPathPart}/` : ''; // Construct the new pathName\n    console.log(\"New pathName:\", newPathName);\n    fetch(`http://localhost:1337/paths${newPathName}`) // Pass the new pathName to the API\n    .then(response => response.json()).then(data => {\n      console.log(\"Category content:\", data);\n      setCategoryContent(data);\n    }).catch(error => console.error('Error fetching category content:', error));\n  };\n  console.log(\"Render categoryContent:\", categoryContent);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Category Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: categoryContent.length > 0 && categoryContent[0].p_name_rus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPage, \"QiEYa7A3UQE0mPJjiQsQkgr+G8Q=\", false, function () {\n  return [useParams];\n});\n_c = ContentPage;\nexport default ContentPage;\nvar _c;\n$RefreshReg$(_c, \"ContentPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ContentPage","_s","pathName","categoryContent","setCategoryContent","fetchCategoryContent","console","log","pathParts","split","lastPathPart","length","newPathName","fetch","then","response","json","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","p_name_rus","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ContentPage = () => {\r\n  const { pathName } = useParams();\r\n  const [categoryContent, setCategoryContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchCategoryContent(pathName);\r\n  }, [pathName]);\r\n\r\n  const fetchCategoryContent = (pathName) => {\r\n    console.log(\"Fetching content for pathName:\", pathName);\r\n    const pathParts = pathName.split('/'); // Split the pathName by '/'\r\n    const lastPathPart = pathParts[pathParts.length - 1]; // Get the last part of the path\r\n    const newPathName = lastPathPart ? `/${lastPathPart}/` : ''; // Construct the new pathName\r\n    console.log(\"New pathName:\", newPathName);\r\n    fetch(`http://localhost:1337/paths${newPathName}`) // Pass the new pathName to the API\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Category content:\", data);\r\n        setCategoryContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching category content:', error));\r\n  };\r\n\r\n  console.log(\"Render categoryContent:\", categoryContent);\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      <h2>Category Content</h2>\r\n      <p>{categoryContent.length > 0 && categoryContent[0].p_name_rus}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC;EAChC,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdS,oBAAoB,CAACH,QAAQ,CAAC;EAChC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMG,oBAAoB,GAAIH,QAAQ,IAAK;IACzCI,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEL,QAAQ,CAAC;IACvD,MAAMM,SAAS,GAAGN,QAAQ,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,MAAMC,YAAY,GAAGF,SAAS,CAACA,SAAS,CAACG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,MAAMC,WAAW,GAAGF,YAAY,GAAI,IAAGA,YAAa,GAAE,GAAG,EAAE,CAAC,CAAC;IAC7DJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,WAAW,CAAC;IACzCC,KAAK,CAAE,8BAA6BD,WAAY,EAAC,CAAC,CAAC;IAAA,CAChDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZX,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEU,IAAI,CAAC;MACtCb,kBAAkB,CAACa,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIb,OAAO,CAACa,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC;EAEDb,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,eAAe,CAAC;EAEvD,oBACEJ,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB1B,OAAA;MAAAsB,QAAA,EAAIlB,eAAe,CAACQ,MAAM,GAAG,CAAC,IAAIR,eAAe,CAAC,CAAC,CAAC,CAACuB;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/BID,WAAW;EAAA,QACMH,SAAS;AAAA;AAAA8B,EAAA,GAD1B3B,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}