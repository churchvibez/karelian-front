{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\pages\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Link, useNavigate } from 'react-router-dom';\nimport parse from 'html-react-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param1,\n    param2\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [content, setContent] = useState([]);\n  const [pageTitle, setPageTitle] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false);\n  const [currentImageUrl, setCurrentImageUrl] = useState('');\n  const contentRef = useRef(null);\n  const handleImageClick = src => {\n    setCurrentImageUrl(src);\n    setIsImageModalOpen(true);\n  };\n  const renderContentWithEnhancedImages = item => {\n    return parse(item.a_text, {\n      replace: domNode => {\n        if (domNode.name === 'img') {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            ...domNode.attribs,\n            onClick: () => handleImageClick(domNode.attribs.src),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this);\n        }\n      }\n    });\n  };\n  const letterMappingAbbreviations = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    J: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    E: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  const letterMappingBibliography = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    E: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    YE: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  useEffect(() => {\n    const fetchContent = async () => {\n      let url = '';\n\n      // Checking if we're on a bibliography page by looking for 'biblio' in the path\n      if (location.pathname.includes('/site/biblio')) {\n        const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\n        fetchBibliographyArticles(russianLetter);\n        return; // Exit early since we're handling bibliography content\n      } else if (location.pathname.includes('/site/article/')) {\n        // Fetch article by ID\n        fetchArticleByAId(param2);\n        // fetchPhotosForArticle(param2);\n        return;\n      } else if (location.pathname.includes('abbreviation')) {\n        // Handle abbreviation content\n        const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\n        fetchAbbreviations(russianLetter);\n        return;\n      } else {\n        url = `http://localhost:1337/paths/${param1}/${param2}`;\n      }\n      adjustPageTitleBasedOnPath();\n      try {\n        if (url) {\n          const response = await fetch(url);\n          const data = await response.json();\n          setContent(data);\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n      }\n    };\n    const fetchSpecificFiles = async () => {\n      let startId, endId;\n      if (location.pathname.includes('/occupation/verigin')) {\n        startId = 3;\n        endId = 7;\n      } else if (location.pathname.includes('/site/article/83')) {\n        startId = 8;\n        endId = 33;\n      }\n      if (startId && endId) {\n        try {\n          const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\n          const data = await response.json();\n          setFiles(data);\n        } catch (error) {\n          console.error('Error fetching files:', error);\n        }\n      }\n    };\n    fetchContent();\n    fetchSpecificFiles();\n  }, [param1, param2, location.pathname, location.search]);\n  const adjustPageTitleBasedOnPath = () => {\n    const queryParams = new URLSearchParams(location.search);\n    const titleFromQuery = queryParams.get('title');\n    if (titleFromQuery) {\n      setPageTitle(titleFromQuery);\n    } else if (location.pathname.includes('/site/commander/front')) {\n      setPageTitle(\"Командующие Карельским фронтом\");\n    } else {\n      setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\n    }\n  };\n  const fetchAbbreviations = letter => {\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`).then(response => response.json()).then(data => {\n      console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\n      setContent(data);\n    }).catch(error => console.error('Error fetching abbreviations:', error));\n  };\n  const fetchArticleByAId = async aId => {\n    try {\n      const response = await fetch(`http://localhost:1337/site/article/${aId}`);\n      const data = await response.json();\n      // console.log(\"Fetched data:\", data);\n      if (location.pathname.includes('/site/article/')) {\n        // If we're on a specific article page, set the pageTitle to that article's title.\n        setPageTitle(data.a_title);\n      }\n      setContent([data]); // Setting content with an array containing the fetched article\n    } catch (error) {\n      console.error('Error fetching article by ID:', error);\n    }\n  };\n  const fetchBibliographyArticles = russianLetter => {\n    // Assuming the existence of a correct API endpoint and the russianLetter is correctly mapped\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`).then(response => response.json()).then(data => {\n      setContent(data); // Assuming the API response directly provides the content array\n    }).catch(error => console.error('Error fetching bibliography articles:', error));\n  };\n  const shouldDisplayTitle = () => {\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"backButton\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : shouldDisplayTitle() && !location.pathname.includes('/site/photo/') ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/site/article/${item.a_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this) : null, !(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        children: renderContentWithEnhancedImages(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)), (location.pathname.includes('/occupation/verigin') || location.pathname.includes('/site/article/83')) && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.http_path,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), isImageModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageModal\",\n      onClick: () => setIsImageModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => setIsImageModalOpen(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentImageUrl,\n        className: \"modalContent\",\n        alt: \"Enlarged view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"8/QqzRmNPq6wwUWzM2hpV/rUJkE=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useLocation","Link","useNavigate","parse","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentPageMultiple","_s","param1","param2","location","navigate","content","setContent","pageTitle","setPageTitle","files","setFiles","isImageModalOpen","setIsImageModalOpen","currentImageUrl","setCurrentImageUrl","contentRef","handleImageClick","src","renderContentWithEnhancedImages","item","a_text","replace","domNode","name","attribs","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","letterMappingAbbreviations","A","B","V","G","D","J","ZH","Z","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SCH","Y","E","YU","YA","letterMappingBibliography","YE","fetchContent","url","pathname","includes","russianLetter","toUpperCase","fetchBibliographyArticles","fetchArticleByAId","fetchAbbreviations","adjustPageTitleBasedOnPath","response","fetch","data","json","error","console","fetchSpecificFiles","startId","endId","search","queryParams","URLSearchParams","titleFromQuery","get","charAt","slice","letter","then","log","catch","aId","a_title","shouldDisplayTitle","className","children","map","index","dangerouslySetInnerHTML","__html","to","a_id","file","href","http_path","target","rel","title","alt","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/pages/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useLocation, Link, useNavigate } from 'react-router-dom';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nconst ContentPageMultiple = () => {\r\n  const { param1, param2 } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [content, setContent] = useState([]);\r\n  const [pageTitle, setPageTitle] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false);\r\n  const [currentImageUrl, setCurrentImageUrl] = useState('');\r\n  const contentRef = useRef(null);\r\n\r\n\r\nconst handleImageClick = (src) => {\r\n  setCurrentImageUrl(src);\r\n  setIsImageModalOpen(true);\r\n};\r\n\r\nconst renderContentWithEnhancedImages = (item) => {\r\n  return parse(item.a_text, {\r\n    replace: (domNode) => {\r\n      if (domNode.name === 'img') {\r\n        return (\r\n          <img\r\n            {...domNode.attribs}\r\n            onClick={() => handleImageClick(domNode.attribs.src)}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n        );\r\n      }\r\n    },\r\n  });\r\n};\r\n\r\n  \r\n  const letterMappingAbbreviations = {\r\n  A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', J: 'Е', ZH: 'Ж', Z: 'З',\r\n  I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n  S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n  SCH: 'Щ', Y: 'Ы', E: 'Э', YU: 'Ю', YA: 'Я', };\r\n  const letterMappingBibliography = {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', E: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', YE: 'Э', YU: 'Ю', YA: 'Я', };\r\n\r\n    useEffect(() => {\r\n      const fetchContent = async () => {\r\n        let url = '';\r\n    \r\n        // Checking if we're on a bibliography page by looking for 'biblio' in the path\r\n        if (location.pathname.includes('/site/biblio')) {\r\n          const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\r\n          fetchBibliographyArticles(russianLetter);\r\n          return; // Exit early since we're handling bibliography content\r\n        } else if (location.pathname.includes('/site/article/')) {\r\n          // Fetch article by ID\r\n          fetchArticleByAId(param2);\r\n          // fetchPhotosForArticle(param2);\r\n          return;\r\n        } \r\n        else if (location.pathname.includes('abbreviation')) {\r\n          // Handle abbreviation content\r\n          const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\r\n          fetchAbbreviations(russianLetter);\r\n          return;\r\n        }\r\n        else \r\n        {\r\n          url = `http://localhost:1337/paths/${param1}/${param2}`;\r\n        }\r\n        adjustPageTitleBasedOnPath();\r\n\r\n        \r\n        \r\n        try {\r\n          if (url) {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setContent(data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching content:', error);\r\n        }\r\n      };\r\n\r\n      const fetchSpecificFiles = async () => {\r\n        let startId, endId;\r\n        if (location.pathname.includes('/occupation/verigin')) {\r\n          startId = 3;\r\n          endId = 7;\r\n        } else if (location.pathname.includes('/site/article/83')) {\r\n          startId = 8;\r\n          endId = 33;\r\n        }\r\n  \r\n        if (startId && endId) {\r\n          try {\r\n            const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\r\n            const data = await response.json();\r\n            setFiles(data);\r\n          } catch (error) {\r\n            console.error('Error fetching files:', error);\r\n          }\r\n        }\r\n      };\r\n\r\n\r\n      fetchContent();\r\n      fetchSpecificFiles();\r\n    }, [param1, param2, location.pathname, location.search]);\r\n\r\n    \r\n    const adjustPageTitleBasedOnPath = () => {\r\n      const queryParams = new URLSearchParams(location.search);\r\n      const titleFromQuery = queryParams.get('title');\r\n      if (titleFromQuery) {\r\n        setPageTitle(titleFromQuery);\r\n      } else if (location.pathname.includes('/site/commander/front')) {\r\n        setPageTitle(\"Командующие Карельским фронтом\");\r\n      } else {\r\n        setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\r\n      }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n  const fetchAbbreviations = (letter) => {\r\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\r\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching abbreviations:', error));\r\n  };\r\n  \r\n  const fetchArticleByAId = async (aId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:1337/site/article/${aId}`);\r\n      const data = await response.json();\r\n      // console.log(\"Fetched data:\", data);\r\n      if (location.pathname.includes('/site/article/')) {\r\n        // If we're on a specific article page, set the pageTitle to that article's title.\r\n        setPageTitle(data.a_title);\r\n      }\r\n      setContent([data]); // Setting content with an array containing the fetched article\r\n    } catch (error) {\r\n      console.error('Error fetching article by ID:', error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const fetchBibliographyArticles = (russianLetter) => {\r\n    // Assuming the existence of a correct API endpoint and the russianLetter is correctly mapped\r\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setContent(data); // Assuming the API response directly provides the content array\r\n      })\r\n      .catch(error => console.error('Error fetching bibliography articles:', error));\r\n  };\r\n  \r\n\r\n\r\n  const shouldDisplayTitle = () => {\r\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      <div>\r\n        <button className=\"backButton\" onClick={() => navigate(-1)}>\r\n          ←\r\n        </button>    \r\n      </div>\r\n      <h1>{pageTitle}</h1>\r\n      {content.map((item, index) => (\r\n        <div key={index}>\r\n          {(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) ? (\r\n            <>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n              <div dangerouslySetInnerHTML={{ __html: item.a_text }} />\r\n            </>\r\n          ) : shouldDisplayTitle() && !location.pathname.includes('/site/photo/') ? (\r\n            <Link to={`/site/article/${item.a_id}`}>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n            </Link>\r\n          ) : null}\r\n          {!(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) && (\r\n            <div className=\"desc\">{renderContentWithEnhancedImages(item)}</div>\r\n          )}\r\n        </div>\r\n      ))}\r\n      {(location.pathname.includes('/occupation/verigin') || location.pathname.includes('/site/article/83')) && (\r\n        <ul>\r\n          {files.map((file, index) => (\r\n            <li key={index}>\r\n              <a href={file.http_path} target=\"_blank\" rel=\"noopener noreferrer\">{file.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {isImageModalOpen && (\r\n      <div className=\"imageModal\" onClick={() => setIsImageModalOpen(false)}>\r\n        <span className=\"close\" onClick={() => setIsImageModalOpen(false)}>&times;</span>\r\n        <img src={currentImageUrl} className=\"modalContent\" alt=\"Enlarged view\" />\r\n      </div>\r\n    )}\r\n    </div>\r\n  );\r\n  \r\n  \r\n  \r\n};\r\n\r\nexport default ContentPageMultiple;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,WAAW,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC5E,OAAOC,KAAK,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EACtC,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM4B,UAAU,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAGjC,MAAM2B,gBAAgB,GAAIC,GAAG,IAAK;IAChCH,kBAAkB,CAACG,GAAG,CAAC;IACvBL,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMM,+BAA+B,GAAIC,IAAI,IAAK;IAChD,OAAOzB,KAAK,CAACyB,IAAI,CAACC,MAAM,EAAE;MACxBC,OAAO,EAAGC,OAAO,IAAK;QACpB,IAAIA,OAAO,CAACC,IAAI,KAAK,KAAK,EAAE;UAC1B,oBACE3B,OAAA;YAAA,GACM0B,OAAO,CAACE,OAAO;YACnBC,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAACM,OAAO,CAACE,OAAO,CAACP,GAAG,CAAE;YACrDS,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAU;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAEN;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAGC,MAAMC,0BAA0B,GAAG;IACnCC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC/DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC9DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAChEC,GAAG,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAK,CAAC;EAC7C,MAAMC,yBAAyB,GAAG;IAChC7B,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEsB,CAAC,EAAE,GAAG;IAAEpB,EAAE,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC/DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAC9DC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE,GAAG;IAChEC,GAAG,EAAE,GAAG;IAAEC,CAAC,EAAE,GAAG;IAAEK,EAAE,EAAE,GAAG;IAAEH,EAAE,EAAE,GAAG;IAAEC,EAAE,EAAE;EAAK,CAAC;EAE9CzE,SAAS,CAAC,MAAM;IACd,MAAM4E,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIC,GAAG,GAAG,EAAE;;MAEZ;MACA,IAAI9D,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;QAC9C,MAAMC,aAAa,GAAGN,yBAAyB,CAAC5D,MAAM,CAACmE,WAAW,CAAC,CAAC,CAAC,IAAInE,MAAM;QAC/EoE,yBAAyB,CAACF,aAAa,CAAC;QACxC,OAAO,CAAC;MACV,CAAC,MAAM,IAAIjE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QACvD;QACAI,iBAAiB,CAACrE,MAAM,CAAC;QACzB;QACA;MACF,CAAC,MACI,IAAIC,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;QACnD;QACA,MAAMC,aAAa,GAAGpC,0BAA0B,CAAC9B,MAAM,CAACmE,WAAW,CAAC,CAAC,CAAC,IAAInE,MAAM;QAChFsE,kBAAkB,CAACJ,aAAa,CAAC;QACjC;MACF,CAAC,MAED;QACEH,GAAG,GAAI,+BAA8BhE,MAAO,IAAGC,MAAO,EAAC;MACzD;MACAuE,0BAA0B,CAAC,CAAC;MAI5B,IAAI;QACF,IAAIR,GAAG,EAAE;UACP,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;UACjC,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCvE,UAAU,CAACsE,IAAI,CAAC;QAClB;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAIC,OAAO,EAAEC,KAAK;MAClB,IAAI/E,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;QACrDc,OAAO,GAAG,CAAC;QACXC,KAAK,GAAG,CAAC;MACX,CAAC,MAAM,IAAI/E,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QACzDc,OAAO,GAAG,CAAC;QACXC,KAAK,GAAG,EAAE;MACZ;MAEA,IAAID,OAAO,IAAIC,KAAK,EAAE;QACpB,IAAI;UACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCM,OAAQ,IAAGC,KAAM,EAAC,CAAC;UACrF,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCnE,QAAQ,CAACkE,IAAI,CAAC;QAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;MACF;IACF,CAAC;IAGDd,YAAY,CAAC,CAAC;IACdgB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAAC/E,MAAM,EAAEC,MAAM,EAAEC,QAAQ,CAAC+D,QAAQ,EAAE/D,QAAQ,CAACgF,MAAM,CAAC,CAAC;EAGxD,MAAMV,0BAA0B,GAAGA,CAAA,KAAM;IACvC,MAAMW,WAAW,GAAG,IAAIC,eAAe,CAAClF,QAAQ,CAACgF,MAAM,CAAC;IACxD,MAAMG,cAAc,GAAGF,WAAW,CAACG,GAAG,CAAC,OAAO,CAAC;IAC/C,IAAID,cAAc,EAAE;MAClB9E,YAAY,CAAC8E,cAAc,CAAC;IAC9B,CAAC,MAAM,IAAInF,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;MAC9D3D,YAAY,CAAC,gCAAgC,CAAC;IAChD,CAAC,MAAM;MACLA,YAAY,CAACN,MAAM,CAACsF,MAAM,CAAC,CAAC,CAAC,CAACnB,WAAW,CAAC,CAAC,GAAGnE,MAAM,CAACuF,KAAK,CAAC,CAAC,CAAC,CAAC;IAChE;EACF,CAAC;EAKH,MAAMjB,kBAAkB,GAAIkB,MAAM,IAAK;IACrC,MAAMtB,aAAa,GAAGpC,0BAA0B,CAAC0D,MAAM,CAACrB,WAAW,CAAC,CAAC,CAAC,IAAIqB,MAAM;IAChFf,KAAK,CAAE,2CAA0CP,aAAc,EAAC,CAAC,CAC9DuB,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCc,IAAI,CAACf,IAAI,IAAI;MACZG,OAAO,CAACa,GAAG,CAAE,8DAA6DxB,aAAc,EAAC,CAAC;MAC1F9D,UAAU,CAACsE,IAAI,CAAC;IAClB,CAAC,CAAC,CACDiB,KAAK,CAACf,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMP,iBAAiB,GAAG,MAAOuB,GAAG,IAAK;IACvC,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCmB,GAAI,EAAC,CAAC;MACzE,MAAMlB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC;MACA,IAAI1E,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QAChD;QACA3D,YAAY,CAACoE,IAAI,CAACmB,OAAO,CAAC;MAC5B;MACAzF,UAAU,CAAC,CAACsE,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAID,MAAMR,yBAAyB,GAAIF,aAAa,IAAK;IACnD;IACAO,KAAK,CAAE,qCAAoCP,aAAc,EAAC,CAAC,CACxDuB,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCc,IAAI,CAACf,IAAI,IAAI;MACZtE,UAAU,CAACsE,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDiB,KAAK,CAACf,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC,CAAC;EAClF,CAAC;EAID,MAAMkB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,OAAO,CAAC7F,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAChE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAChE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,0BAA0B,CAAC,IAAI,CAAChE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,yBAAyB,CAAC,IAAI,CAAChE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,yBAAyB,CAAC,IAAI,CAAChE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,wBAAwB,CAAC;EACrV,CAAC;EAED,oBACEvE,OAAA;IAAKqG,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtG,OAAA;MAAAsG,QAAA,eACEtG,OAAA;QAAQqG,SAAS,EAAC,YAAY;QAACxE,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,CAAC,CAAC,CAAE;QAAA8F,QAAA,EAAC;MAE5D;QAAAtE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNnC,OAAA;MAAAsG,QAAA,EAAK3F;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnB1B,OAAO,CAAC8F,GAAG,CAAC,CAAChF,IAAI,EAAEiF,KAAK,kBACvBxG,OAAA;MAAAsG,QAAA,GACI/F,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,cAAc,CAAC,IAAIhE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,oBAAoB,CAAC,gBAC9FvE,OAAA,CAAAE,SAAA;QAAAoG,QAAA,gBACEtG,OAAA;UAAIyG,uBAAuB,EAAE;YAAEC,MAAM,EAAEnF,IAAI,CAAC4E;UAAQ;QAAE;UAAAnE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzDnC,OAAA;UAAKyG,uBAAuB,EAAE;YAAEC,MAAM,EAAEnF,IAAI,CAACC;UAAO;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACzD,CAAC,GACDiE,kBAAkB,CAAC,CAAC,IAAI,CAAC7F,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,cAAc,CAAC,gBACrEvE,OAAA,CAACJ,IAAI;QAAC+G,EAAE,EAAG,iBAAgBpF,IAAI,CAACqF,IAAK,EAAE;QAAAN,QAAA,eACrCtG,OAAA;UAAIyG,uBAAuB,EAAE;YAAEC,MAAM,EAAEnF,IAAI,CAAC4E;UAAQ;QAAE;UAAAnE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,GACL,IAAI,EACP,EAAE5B,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,cAAc,CAAC,IAAIhE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,iBAChGvE,OAAA;QAAKqG,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEhF,+BAA+B,CAACC,IAAI;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACnE;IAAA,GAbOqE,KAAK;MAAAxE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcV,CACN,CAAC,EACD,CAAC5B,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,qBAAqB,CAAC,IAAIhE,QAAQ,CAAC+D,QAAQ,CAACC,QAAQ,CAAC,kBAAkB,CAAC,kBACnGvE,OAAA;MAAAsG,QAAA,EACGzF,KAAK,CAAC0F,GAAG,CAAC,CAACM,IAAI,EAAEL,KAAK,kBACrBxG,OAAA;QAAAsG,QAAA,eACEtG,OAAA;UAAG8G,IAAI,EAAED,IAAI,CAACE,SAAU;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAX,QAAA,EAAEO,IAAI,CAACK;QAAK;UAAAlF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAD5EqE,KAAK;QAAAxE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,EACApB,gBAAgB,iBACjBf,OAAA;MAAKqG,SAAS,EAAC,YAAY;MAACxE,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAAC,KAAK,CAAE;MAAAsF,QAAA,gBACpEtG,OAAA;QAAMqG,SAAS,EAAC,OAAO;QAACxE,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAAC,KAAK,CAAE;QAAAsF,QAAA,EAAC;MAAO;QAAAtE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjFnC,OAAA;QAAKqB,GAAG,EAAEJ,eAAgB;QAACoF,SAAS,EAAC,cAAc;QAACc,GAAG,EAAC;MAAe;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAKV,CAAC;AAAC/B,EAAA,CAxNID,mBAAmB;EAAA,QACIT,SAAS,EACnBC,WAAW,EACXE,WAAW;AAAA;AAAAuH,EAAA,GAHxBjH,mBAAmB;AA0NzB,eAAeA,mBAAmB;AAAC,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}