{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param2\n  } = useParams();\n  const [content, setContent] = useState([]);\n  const letterMapping = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    E: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    E: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  useEffect(() => {\n    // Check if the path includes 'biblio' to determine the nature of the fetch operation\n    if (location.pathname.includes('biblio')) {\n      // Fetch bibliography articles for the specific letter\n      fetchBibliographyArticles(param2);\n    } else {\n      // Fetch standard articles starting with the letter\n      fetchArticlesByLetter(param2);\n    }\n  }, [param2, location.pathname]);\n  const fetchArticleById = param2 => {\n    console.log(\"Fetching article with ID:\", param2); // Log the ID being fetched\n    fetch(`http://localhost:1337/article/${param2}`).then(response => response.json()).then(data => {\n      console.log(\"Response from API:\", data); // Log the response from the API\n      setContent(data ? [data] : []); // Set content to an array containing data if data exists, otherwise set it to an empty array\n      console.log(\"Content after setting state:\", content); // Log the content after setting state\n    }).catch(error => console.error('Error fetching article by ID:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item.a_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: item.a_text\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"7nLuKE+xJVTVbn/F0IXKjhQtKZo=\", false, function () {\n  return [useParams];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ContentPageMultiple","_s","param2","content","setContent","letterMapping","A","B","V","G","D","E","ZH","Z","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SCH","Y","YU","YA","location","pathname","includes","fetchBibliographyArticles","fetchArticlesByLetter","fetchArticleById","console","log","fetch","then","response","json","data","catch","error","className","children","map","item","index","a_title","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","a_text","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ContentPageMultiple = () => {\r\n  const { param2 } = useParams();\r\n  const [content, setContent] = useState([]);\r\n\r\n  const letterMapping = {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', E: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', E: 'Э', YU: 'Ю', YA: 'Я',\r\n  };\r\n  \r\n  useEffect(() => {\r\n    // Check if the path includes 'biblio' to determine the nature of the fetch operation\r\n    if (location.pathname.includes('biblio')) {\r\n      // Fetch bibliography articles for the specific letter\r\n      fetchBibliographyArticles(param2);\r\n    } else {\r\n      // Fetch standard articles starting with the letter\r\n      fetchArticlesByLetter(param2);\r\n    }\r\n  }, [param2, location.pathname]);\r\n  \r\n  const fetchArticleById = (param2) => {\r\n    console.log(\"Fetching article with ID:\", param2); // Log the ID being fetched\r\n    fetch(`http://localhost:1337/article/${param2}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Response from API:\", data); // Log the response from the API\r\n        setContent(data ? [data] : []); // Set content to an array containing data if data exists, otherwise set it to an empty array\r\n        console.log(\"Content after setting state:\", content); // Log the content after setting state\r\n      })\r\n      .catch(error => console.error('Error fetching article by ID:', error));\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      {content.map((item, index) => (\r\n        <div key={index}>\r\n          <h3>{item.a_title}</h3>\r\n          <div dangerouslySetInnerHTML={{ __html: item.a_text }} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentPageMultiple;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}