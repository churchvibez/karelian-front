{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentPage = () => {\n  _s();\n  const {\n    pathName\n  } = useParams();\n  const [pathInfo, setPathInfo] = useState(null);\n  const [articleText, setArticleText] = useState(null);\n  useEffect(() => {\n    fetchPathDetails(pathName);\n  }, [pathName]);\n  const fetchPathDetails = pathName => {\n    fetch(`http://localhost:1337/path-details/${pathName}`).then(response => response.json()).then(data => {\n      console.log('Article Details from Backend:', data); // Log the data \n      setPathInfo(data);\n      // Fetch article details if c_id is available\n      if (data && data.c_id) {\n        // Set article text directly using the c_id\n        setArticleText(data.c_id.toString());\n      } else {\n        // If c_id is not available, set a default message\n        setArticleText(\"No article text available\");\n      }\n    }).catch(error => console.error('Error fetching path details:', error));\n  };\n\n  // const fetchArticleDetails = (categoryId) => {\n  //   fetch(`http://localhost:1337/article-details/${categoryId}`)\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log('Article Details from Backend:', data); // Log the data received from the backend\n  //       if (data.text) {\n  //         console.log('Setting article text:', data.text); // Log the article text being set\n  //         setArticleText(data.text);\n  //       } else {\n  //         console.log('No article text available');\n  //         setArticleText(\"No article text available\"); // Set default message if no article text is received\n  //       }\n  //     })\n  //     .catch(error => console.error('Error fetching article details:', error));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: pathInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pathInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), articleText ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: articleText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading article text...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPage, \"H7Lslsr/I/wQllLcfIPr2xTaB1A=\", false, function () {\n  return [useParams];\n});\n_c = ContentPage;\nexport default ContentPage;\nvar _c;\n$RefreshReg$(_c, \"ContentPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ContentPage","_s","pathName","pathInfo","setPathInfo","articleText","setArticleText","fetchPathDetails","fetch","then","response","json","data","console","log","c_id","toString","catch","error","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ContentPage = () => {\r\n  const { pathName } = useParams();\r\n  const [pathInfo, setPathInfo] = useState(null);\r\n  const [articleText, setArticleText] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPathDetails(pathName);\r\n  }, [pathName]);\r\n\r\n  const fetchPathDetails = (pathName) => {\r\n    fetch(`http://localhost:1337/path-details/${pathName}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Article Details from Backend:', data); // Log the data \r\n        setPathInfo(data);\r\n        // Fetch article details if c_id is available\r\n        if (data && data.c_id) {\r\n          // Set article text directly using the c_id\r\n          setArticleText(data.c_id.toString());\r\n        } else {\r\n          // If c_id is not available, set a default message\r\n          setArticleText(\"No article text available\");\r\n        }\r\n      })\r\n      .catch(error => console.error('Error fetching path details:', error));\r\n  };\r\n  \r\n\r\n  // const fetchArticleDetails = (categoryId) => {\r\n  //   fetch(`http://localhost:1337/article-details/${categoryId}`)\r\n  //     .then(response => response.json())\r\n  //     .then(data => {\r\n  //       console.log('Article Details from Backend:', data); // Log the data received from the backend\r\n  //       if (data.text) {\r\n  //         console.log('Setting article text:', data.text); // Log the article text being set\r\n  //         setArticleText(data.text);\r\n  //       } else {\r\n  //         console.log('No article text available');\r\n  //         setArticleText(\"No article text available\"); // Set default message if no article text is received\r\n  //       }\r\n  //     })\r\n  //     .catch(error => console.error('Error fetching article details:', error));\r\n  // };\r\n  \r\n  \r\n  return (\r\n    <div className=\"generalPages\">\r\n      {pathInfo ? (\r\n        <div>\r\n          <h2>{pathInfo.title}</h2>\r\n          {articleText ? <p>{articleText}</p> : <p>Loading article text...</p>}\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC;EAChC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAACL,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMK,gBAAgB,GAAIL,QAAQ,IAAK;IACrCM,KAAK,CAAE,sCAAqCN,QAAS,EAAC,CAAC,CACpDO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpDR,WAAW,CAACQ,IAAI,CAAC;MACjB;MACA,IAAIA,IAAI,IAAIA,IAAI,CAACG,IAAI,EAAE;QACrB;QACAT,cAAc,CAACM,IAAI,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MACtC,CAAC,MAAM;QACL;QACAV,cAAc,CAAC,2BAA2B,CAAC;MAC7C;IACF,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,IAAIL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BjB,QAAQ,gBACPJ,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKjB,QAAQ,CAACkB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACxBpB,WAAW,gBAAGN,OAAA;QAAAqB,QAAA,EAAIf;MAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAAG1B,OAAA;QAAAqB,QAAA,EAAG;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,gBAEN1B,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzDID,WAAW;EAAA,QACMH,SAAS;AAAA;AAAA6B,EAAA,GAD1B1B,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}