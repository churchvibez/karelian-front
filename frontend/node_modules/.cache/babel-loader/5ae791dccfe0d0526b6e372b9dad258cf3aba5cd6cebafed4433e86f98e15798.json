{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param2\n  } = useParams(); // Assuming param2 is the letter from the URL\n  const [content, setContent] = useState([]);\n  const letterMapping = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    E: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    E: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  useEffect(() => {\n    const russianLetter = letterMapping[param2.toUpperCase()] || 'А';\n    fetchData(russianLetter);\n  }, [param2]);\n  const fetchData = russianLetter => {\n    const url = `http://localhost:1337/site/biblio/${encodeURIComponent(russianLetter)}`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(\"Received data:\", data); // Log the entire data array\n      data.forEach(item => {\n        console.log(\"Title:\", item.a_title); // Log the title of each item\n        console.log(\"Text:\", item.a_text); // Log the text content of each item\n      });\n      setContent(data);\n    }).catch(error => console.error('Error fetching content:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"temp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: item.a_text\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"7nLuKE+xJVTVbn/F0IXKjhQtKZo=\", false, function () {\n  return [useParams];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ContentPageMultiple","_s","param2","content","setContent","letterMapping","A","B","V","G","D","E","ZH","Z","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SCH","Y","YU","YA","russianLetter","toUpperCase","fetchData","url","encodeURIComponent","fetch","then","response","json","data","console","log","forEach","item","a_title","a_text","catch","error","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ContentPageMultiple = () => {\r\n  const { param2 } = useParams(); // Assuming param2 is the letter from the URL\r\n  const [content, setContent] = useState([]);\r\n\r\n  const letterMapping = {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', E: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', E: 'Э', YU: 'Ю', YA: 'Я',\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const russianLetter = letterMapping[param2.toUpperCase()] || 'А';\r\n    fetchData(russianLetter);\r\n  }, [param2]);\r\n\r\n  const fetchData = (russianLetter) => {\r\n    const url = `http://localhost:1337/site/biblio/${encodeURIComponent(russianLetter)}`;\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Received data:\", data); // Log the entire data array\r\n        data.forEach(item => {\r\n          console.log(\"Title:\", item.a_title); // Log the title of each item\r\n          console.log(\"Text:\", item.a_text); // Log the text content of each item\r\n        });\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching content:', error));\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      {content.map((item, index) => (\r\n        <div key={index}>\r\n          {/* <h3>{item.a_title}</h3> */}\r\n          <h3>temp</h3>\r\n          <p dangerouslySetInnerHTML={{ __html: item.a_text }} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentPageMultiple;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}