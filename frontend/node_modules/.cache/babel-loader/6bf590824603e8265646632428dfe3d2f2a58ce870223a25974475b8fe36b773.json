{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from 'react-router-dom';\nimport backgroundImage from '../images/background.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [activeCategoryId, setActiveCategoryId] = useState(null);\n  const [subCategories, setSubCategories] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const fetchCategories = () => {\n    fetch('http://localhost:1337/categories/1').then(response => response.json()).then(data => {\n      setCategories(data);\n    }).catch(error => console.error('Error fetching categories:', error));\n  };\n  const handleCategoryClick = parentId => {\n    // Check if the clicked category is already active, if so, deactivate it (toggle functionality)\n    if (activeCategoryId === parentId) {\n      setActiveCategoryId(null);\n      setSubCategories([]); // Clear subcategories\n      return;\n    }\n    setActiveCategoryId(parentId); // Set active category ID\n\n    // Fetching subcategories based on parentId\n    fetch(`http://localhost:1337/subcategories/${parentId}`).then(response => response.json()).then(subCategories => {\n      setSubCategories(subCategories); // Set fetched subcategories\n    }).catch(error => console.error('Error fetching subcategories:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: backgroundImage,\n      alt: \"Background\",\n      className: \"backgroundImageTwo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navLinks\",\n      children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkWithStar\",\n          onClick: () => handleCategoryClick(category.c_id),\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/site/${category.c_name}`,\n            className: \"navLink\",\n            children: category.c_name_rus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getStarImage(category.c_name),\n            alt: \"Star\",\n            className: currentPath === category.c_name ? \"starIconWhite\" : \"starIconRed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), activeCategoryId === category.c_id && subCategories.map((subCategory, subIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkWithStar subLink\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/site/${subCategory.c_name}`,\n            className: \"navLink\",\n            children: subCategory.c_name_rus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: redStar,\n            alt: \"Sub Star\",\n            className: \"starIconRed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, `sub-${subIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"5zUD44jaNCW6kKU5Q30pbtkUeKQ=\", false, function () {\n  return [useLocation];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","backgroundImage","jsxDEV","_jsxDEV","Navbar","_s","categories","setCategories","activeCategoryId","setActiveCategoryId","subCategories","setSubCategories","location","fetchCategories","fetch","then","response","json","data","catch","error","console","handleCategoryClick","parentId","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","category","index","Fragment","onClick","c_id","to","c_name","c_name_rus","getStarImage","currentPath","subCategory","subIndex","redStar","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport backgroundImage from '../images/background.png';\r\n\r\nconst Navbar = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [activeCategoryId, setActiveCategoryId] = useState(null);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchCategories = () => {\r\n    fetch('http://localhost:1337/categories/1')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setCategories(data);\r\n      })\r\n      .catch(error => console.error('Error fetching categories:', error));\r\n  };\r\n\r\n  const handleCategoryClick = (parentId) => {\r\n    // Check if the clicked category is already active, if so, deactivate it (toggle functionality)\r\n    if (activeCategoryId === parentId) {\r\n      setActiveCategoryId(null);\r\n      setSubCategories([]); // Clear subcategories\r\n      return;\r\n    }\r\n\r\n    setActiveCategoryId(parentId); // Set active category ID\r\n\r\n    // Fetching subcategories based on parentId\r\n    fetch(`http://localhost:1337/subcategories/${parentId}`)\r\n      .then(response => response.json())\r\n      .then(subCategories => {\r\n        setSubCategories(subCategories); // Set fetched subcategories\r\n      })\r\n      .catch(error => console.error('Error fetching subcategories:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <img src={backgroundImage} alt=\"Background\" className=\"backgroundImageTwo\"/>\r\n      <div className=\"navLinks\">\r\n        {categories.map((category, index) => (\r\n          <React.Fragment key={index}>\r\n            <div className=\"linkWithStar\" onClick={() => handleCategoryClick(category.c_id)}>\r\n              <Link to={`/site/${category.c_name}`} className=\"navLink\">\r\n                {category.c_name_rus}\r\n              </Link>\r\n              <img src={getStarImage(category.c_name)} alt=\"Star\" className={currentPath === category.c_name ? \"starIconWhite\" : \"starIconRed\"} />\r\n            </div>\r\n            {/* Conditional rendering of subcategories based on the active category ID */}\r\n            {activeCategoryId === category.c_id && subCategories.map((subCategory, subIndex) => (\r\n              <div key={`sub-${subIndex}`} className=\"linkWithStar subLink\">\r\n                <Link to={`/site/${subCategory.c_name}`} className=\"navLink\">\r\n                  {subCategory.c_name_rus}\r\n                </Link>\r\n                {/* Optionally display a star icon for subcategories */}\r\n                <img src={redStar} alt=\"Sub Star\" className=\"starIconRed\" />\r\n              </div>\r\n            ))}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}