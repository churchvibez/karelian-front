{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\pages\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, useNavigate } from 'react-router-dom';\nimport { baseUrl } from '../apiConfig';\nimport parse from 'html-react-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param1,\n    param2\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [content, setContent] = useState([]);\n  const [pageTitle, setPageTitle] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false);\n  const [currentImageUrl, setCurrentImageUrl] = useState('');\n  const [categoryTitles, setCategoryTitles] = useState({\n    categoryOneTitle: '',\n    categoryTwoTitle: ''\n  });\n  const letterMappingAbbreviations = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    J: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    E: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  const letterMappingBibliography = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    E: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    YE: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  useEffect(() => {\n    const fetchContent = async () => {\n      let url = '';\n      if (location.pathname.includes('/site/biblio')) {\n        const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\n        fetchBibliographyArticles(russianLetter);\n        return;\n      } else if (location.pathname.includes('/site/article/')) {\n        fetchArticleByAId(param2);\n        return;\n      } else if (location.pathname.includes('abbreviation')) {\n        const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\n        fetchAbbreviations(russianLetter);\n        return;\n      } else {\n        url = `${baseUrl}/paths/${param1}/${param2}`;\n      }\n      adjustPageTitleBasedOnPath();\n      try {\n        if (url) {\n          const response = await fetch(url);\n          const data = await response.json();\n          if (data.title) {\n            setPageTitle(data.title);\n            setContent(data.articles || []);\n          } else {\n            setContent(Array.isArray(data) ? data : [data]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n      }\n    };\n    const fetchSpecificFiles = async () => {\n      let startId, endId;\n      if (location.pathname.includes('/occupation/verigin')) {\n        startId = 3;\n        endId = 7;\n      } else if (location.pathname.includes('/site/article/83')) {\n        startId = 8;\n        endId = 33;\n      }\n      if (startId && endId) {\n        try {\n          const response = await fetch(`${baseUrl}/files/range/${startId}/${endId}`);\n          const data = await response.json();\n          setFiles(data);\n        } catch (error) {\n          console.error('Error fetching files:', error);\n        }\n      }\n    };\n    const pathSegments = location.pathname.split('/');\n    const categoryIndex = pathSegments.indexOf('site') + 1;\n    if (pathSegments.includes('article')) {\n      // Article page, retrieve last category titles from localStorage\n      const articleIdIndex = pathSegments.findIndex(segment => segment === 'article');\n      if (articleIdIndex !== -1 && pathSegments.length > articleIdIndex) {\n        const articleId = pathSegments[articleIdIndex + 1];\n        fetchArticleCategory(articleId);\n      } else {\n        // Default value in case there's no history\n        setCategoryTitles({\n          categoryOneTitle: ' Found',\n          categoryTwoTitle: 'Not Found'\n        });\n      }\n    } else if (categoryIndex > 0 && pathSegments.length >= categoryIndex + 2) {\n      const paramOne = pathSegments[categoryIndex];\n      const paramTwo = pathSegments[categoryIndex + 1];\n      fetchCategoryTitles(paramOne, paramTwo);\n    }\n    fetchContent();\n    fetchSpecificFiles();\n  }, [param1, param2, location.pathname, location.search]);\n  const fetchArticleCategory = articleId => {\n    fetch(`${baseUrl}/article-category/${articleId}`).then(response => response.json()).then(data => {\n      if (data && data.c_name_rus) {\n        console.log(data);\n        // Setting both categoryOneTitle and categoryTwoTitle the same in case only one title is returned\n        setCategoryTitles({\n          categoryOneTitle: data.c_name_rus,\n          categoryTwoTitle: data.c_name_rus\n        });\n      } else {\n        setCategoryTitles({\n          categoryOneTitle: 'Not Found',\n          categoryTwoTitle: 'Not Found'\n        });\n      }\n    }).catch(error => {\n      console.error('Error fetching article category:', error);\n      setCategoryTitles({\n        categoryOneTitle: 'Not Found',\n        categoryTwoTitle: 'Not Found'\n      });\n    });\n  };\n\n  // Adjusting the fetchCategoryTitles function to differentiate between same or different param1 and param2\n  const fetchCategoryTitles = (paramOne, paramTwo) => {\n    fetch(`${baseUrl}/category-titles/${paramOne}/${paramTwo}`).then(response => response.json()).then(data => {\n      if (data.categoryOneTitle !== data.categoryTwoTitle) {\n        // Setting titles as different if they are indeed different\n        setCategoryTitles({\n          categoryOneTitle: data.categoryOneTitle,\n          categoryTwoTitle: data.categoryTwoTitle\n        });\n      } else {\n        // Setting only categoryOneTitle if param1 and param2 represent the same title\n        setCategoryTitles({\n          categoryOneTitle: data.categoryOneTitle,\n          categoryTwoTitle: ''\n        });\n      }\n      // Store the current categories for future navigation\n      localStorage.setItem('lastCategoryTitles', JSON.stringify(data));\n    }).catch(error => console.error('Error fetching category titles:', error));\n  };\n  const handleImageClick = src => {\n    setCurrentImageUrl(src);\n    setIsImageModalOpen(true);\n  };\n  const removeATags = html => {\n    return html.replace(/<a[^>]*>(.*?)<\\/a>/g, \"$1\");\n  };\n  const renderContentWithImages = htmlContent => {\n    if (typeof htmlContent !== 'string') {\n      console.error(\"Expected a string for htmlContent\");\n      return null;\n    }\n    const contentWithoutATags = removeATags(htmlContent);\n    return parse(contentWithoutATags, {\n      replace: domNode => {\n        if (domNode.name === 'img') {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            ...domNode.attribs,\n            onClick: () => handleImageClick(domNode.attribs.src),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    });\n  };\n  const adjustPageTitleBasedOnPath = () => {\n    const queryParams = new URLSearchParams(location.search);\n    const titleFromQuery = queryParams.get('title');\n    if (titleFromQuery) {\n      setPageTitle(titleFromQuery);\n    } else if (location.pathname.includes('/site/commander/front')) {\n      setPageTitle(\"Командующие Карельским фронтом\");\n    } else {\n      setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\n    }\n  };\n  const fetchAbbreviations = letter => {\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\n    fetch(`${baseUrl}/site/abbreviation/${russianLetter}`).then(response => response.json()).then(data => {\n      setContent(data);\n    }).catch(error => console.error('Error fetching abbreviations:', error));\n  };\n  const fetchArticleByAId = async aId => {\n    try {\n      const response = await fetch(`${baseUrl}/site/article/${aId}`);\n      const data = await response.json();\n      if (location.pathname.includes('/site/article/')) {\n        setPageTitle(data.a_title);\n      }\n      setContent([data]);\n    } catch (error) {\n      console.error('Error fetching article by ID:', error);\n    }\n  };\n  const fetchBibliographyArticles = russianLetter => {\n    fetch(`${baseUrl}/site/biblio/${russianLetter}`).then(response => response.json()).then(data => {\n      setContent(data);\n    }).catch(error => console.error('Error fetching bibliography articles:', error));\n  };\n  const shouldDisplayTitle = () => {\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"location\",\n      children: [`> ${categoryTitles.categoryOneTitle}`, categoryTitles.categoryTwoTitle && ` > ${categoryTitles.categoryTwoTitle}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }, this), !(location.pathname.includes('/site/abbreviation') || location.pathname.includes('/site/biblio')) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"backButton\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : shouldDisplayTitle() && !location.pathname.includes('/site/photo/') ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/site/article/${item.a_id}`,\n        style: {\n          color: 'black'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this) : null, !(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) ? location.pathname.includes('/site/photo') || location.pathname.includes('/site/article') ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        children: renderContentWithImages(item.a_text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        dangerouslySetInnerHTML: {\n          __html: item.a_desc || item.a_text\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this)), (location.pathname.includes('/occupation/verigin') || location.pathname.includes('/site/article/83')) && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.http_path,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            color: 'black'\n          },\n          children: file.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this), isImageModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageModal\",\n      onClick: () => setIsImageModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => setIsImageModalOpen(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentImageUrl,\n        className: \"modalContent\",\n        alt: \"Enlarged view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"hfYpEBcX7clNrnLYBRew2y5RWL4=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","Link","useNavigate","baseUrl","parse","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentPageMultiple","_s","param1","param2","location","navigate","content","setContent","pageTitle","setPageTitle","files","setFiles","isImageModalOpen","setIsImageModalOpen","currentImageUrl","setCurrentImageUrl","categoryTitles","setCategoryTitles","categoryOneTitle","categoryTwoTitle","letterMappingAbbreviations","A","B","V","G","D","J","ZH","Z","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SCH","Y","E","YU","YA","letterMappingBibliography","YE","fetchContent","url","pathname","includes","russianLetter","toUpperCase","fetchBibliographyArticles","fetchArticleByAId","fetchAbbreviations","adjustPageTitleBasedOnPath","response","fetch","data","json","title","articles","Array","isArray","error","console","fetchSpecificFiles","startId","endId","pathSegments","split","categoryIndex","indexOf","articleIdIndex","findIndex","segment","length","articleId","fetchArticleCategory","paramOne","paramTwo","fetchCategoryTitles","search","then","c_name_rus","log","catch","localStorage","setItem","JSON","stringify","handleImageClick","src","removeATags","html","replace","renderContentWithImages","htmlContent","contentWithoutATags","domNode","name","attribs","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","queryParams","URLSearchParams","titleFromQuery","get","charAt","slice","letter","aId","a_title","shouldDisplayTitle","className","children","map","item","index","dangerouslySetInnerHTML","__html","a_text","to","a_id","color","a_desc","file","href","http_path","target","rel","alt","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/pages/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, Link, useNavigate } from 'react-router-dom';\r\nimport { baseUrl } from '../apiConfig';\r\nimport parse from 'html-react-parser';\r\n\r\nconst ContentPageMultiple = () => \r\n{\r\n  const { param1, param2 } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [content, setContent] = useState([]);\r\n  const [pageTitle, setPageTitle] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isImageModalOpen, setIsImageModalOpen] = useState(false);\r\n  const [currentImageUrl, setCurrentImageUrl] = useState('');\r\n  const [categoryTitles, setCategoryTitles] = useState({ categoryOneTitle: '', categoryTwoTitle: '' });\r\n\r\n  const letterMappingAbbreviations = \r\n  {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', J: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', E: 'Э', YU: 'Ю', YA: 'Я', \r\n  };\r\n  const letterMappingBibliography = \r\n  {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', E: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', YE: 'Э', YU: 'Ю', YA: 'Я', \r\n  };\r\n\r\n  useEffect(() => \r\n  {\r\n    const fetchContent = async () => \r\n    {\r\n      let url = '';\r\n      if (location.pathname.includes('/site/biblio')) \r\n      {\r\n        const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\r\n        fetchBibliographyArticles(russianLetter);\r\n        return;\r\n      } else if (location.pathname.includes('/site/article/')) \r\n      {\r\n        fetchArticleByAId(param2);\r\n        return;\r\n      } \r\n      else if (location.pathname.includes('abbreviation')) \r\n      {\r\n        const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\r\n        fetchAbbreviations(russianLetter);\r\n        return;\r\n      }\r\n      else \r\n      {\r\n        url = `${baseUrl}/paths/${param1}/${param2}`;\r\n      }\r\n      \r\n      adjustPageTitleBasedOnPath();\r\n    \r\n      try {\r\n        if (url) {\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          if (data.title) {\r\n            setPageTitle(data.title);\r\n            setContent(data.articles || []);\r\n          } else {\r\n            setContent(Array.isArray(data) ? data : [data]);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching content:', error);\r\n      }\r\n    };\r\n\r\n    const fetchSpecificFiles = async () => \r\n    {\r\n      let startId, endId;\r\n      if (location.pathname.includes('/occupation/verigin')) \r\n      {\r\n        startId = 3;\r\n        endId = 7;\r\n      } else if (location.pathname.includes('/site/article/83')) \r\n      {\r\n        startId = 8;\r\n        endId = 33;\r\n      }\r\n\r\n      if (startId && endId) \r\n      {\r\n        try \r\n        {\r\n          const response = await fetch(`${baseUrl}/files/range/${startId}/${endId}`);\r\n          const data = await response.json();\r\n          setFiles(data);\r\n        } \r\n        catch (error) \r\n        {\r\n          console.error('Error fetching files:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const pathSegments = location.pathname.split('/');\r\n  const categoryIndex = pathSegments.indexOf('site') + 1;\r\n  \r\n  if (pathSegments.includes('article')) {\r\n    // Article page, retrieve last category titles from localStorage\r\n    const articleIdIndex = pathSegments.findIndex(segment => segment === 'article');\r\n      if (articleIdIndex !== -1 && pathSegments.length > articleIdIndex) {\r\n        const articleId = pathSegments[articleIdIndex + 1];\r\n        fetchArticleCategory(articleId);\r\n      } else {\r\n      // Default value in case there's no history\r\n      setCategoryTitles({ categoryOneTitle: ' Found', categoryTwoTitle: 'Not Found' });\r\n    }\r\n  } else if (categoryIndex > 0 && pathSegments.length >= categoryIndex + 2) {\r\n    const paramOne = pathSegments[categoryIndex];\r\n    const paramTwo = pathSegments[categoryIndex + 1];\r\n    fetchCategoryTitles(paramOne, paramTwo);\r\n  }\r\n\r\n    fetchContent();\r\n    fetchSpecificFiles();\r\n  }, [param1, param2, location.pathname, location.search]);\r\n\r\n\r\n  const fetchArticleCategory = (articleId) => {\r\n    fetch(`${baseUrl}/article-category/${articleId}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data && data.c_name_rus) {\r\n          console.log(data);\r\n          // Setting both categoryOneTitle and categoryTwoTitle the same in case only one title is returned\r\n          setCategoryTitles({ categoryOneTitle: data.c_name_rus, categoryTwoTitle: data.c_name_rus });\r\n        } else {\r\n          setCategoryTitles({ categoryOneTitle: 'Not Found', categoryTwoTitle: 'Not Found' });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching article category:', error);\r\n        setCategoryTitles({ categoryOneTitle: 'Not Found', categoryTwoTitle: 'Not Found' });\r\n      });\r\n  };\r\n  \r\n  // Adjusting the fetchCategoryTitles function to differentiate between same or different param1 and param2\r\n  const fetchCategoryTitles = (paramOne, paramTwo) => {\r\n    fetch(`${baseUrl}/category-titles/${paramOne}/${paramTwo}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.categoryOneTitle !== data.categoryTwoTitle) {\r\n          // Setting titles as different if they are indeed different\r\n          setCategoryTitles({ categoryOneTitle: data.categoryOneTitle, categoryTwoTitle: data.categoryTwoTitle });\r\n        } else {\r\n          // Setting only categoryOneTitle if param1 and param2 represent the same title\r\n          setCategoryTitles({ categoryOneTitle: data.categoryOneTitle, categoryTwoTitle: '' });\r\n        }\r\n        // Store the current categories for future navigation\r\n        localStorage.setItem('lastCategoryTitles', JSON.stringify(data));\r\n      })\r\n      .catch(error => console.error('Error fetching category titles:', error));\r\n  };\r\n\r\n  const handleImageClick = (src) => \r\n  {\r\n    setCurrentImageUrl(src);\r\n    setIsImageModalOpen(true);\r\n  };\r\n\r\n  const removeATags = (html) => \r\n  {\r\n    return html.replace(/<a[^>]*>(.*?)<\\/a>/g, \"$1\");\r\n  };\r\n  \r\n  const renderContentWithImages = (htmlContent) => \r\n  {\r\n    if (typeof htmlContent !== 'string') \r\n    {\r\n      console.error(\"Expected a string for htmlContent\");\r\n      return null;\r\n    }\r\n    const contentWithoutATags = removeATags(htmlContent);\r\n    return parse(contentWithoutATags, {\r\n      replace: domNode => \r\n      {\r\n        if (domNode.name === 'img') \r\n        {\r\n          return (\r\n            <img\r\n              {...domNode.attribs}\r\n              onClick={() => handleImageClick(domNode.attribs.src)}\r\n              style={{ cursor: 'pointer' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n    \r\n  const adjustPageTitleBasedOnPath = () => \r\n  {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const titleFromQuery = queryParams.get('title');\r\n    if (titleFromQuery) \r\n    {\r\n      setPageTitle(titleFromQuery);\r\n    } \r\n    else if (location.pathname.includes('/site/commander/front')) \r\n    {\r\n      setPageTitle(\"Командующие Карельским фронтом\");\r\n    } \r\n    else \r\n    {\r\n      setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\r\n    }\r\n  }; \r\n\r\n  const fetchAbbreviations = (letter) => \r\n  {\r\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\r\n    fetch(`${baseUrl}/site/abbreviation/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching abbreviations:', error));\r\n  };\r\n  \r\n  const fetchArticleByAId = async (aId) => \r\n  {\r\n    try \r\n    {\r\n      const response = await fetch(`${baseUrl}/site/article/${aId}`);\r\n      const data = await response.json();\r\n      if (location.pathname.includes('/site/article/')) \r\n      {\r\n        setPageTitle(data.a_title);\r\n      }\r\n      setContent([data]);\r\n    } \r\n    catch (error) \r\n    {\r\n      console.error('Error fetching article by ID:', error);\r\n    }\r\n  };\r\n\r\n  const fetchBibliographyArticles = (russianLetter) => \r\n  {\r\n    fetch(`${baseUrl}/site/biblio/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching bibliography articles:', error));\r\n  };\r\n  \r\n  const shouldDisplayTitle = () => \r\n  {\r\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n    <p className=\"location\">\r\n      {`> ${categoryTitles.categoryOneTitle}`}{categoryTitles.categoryTwoTitle && ` > ${categoryTitles.categoryTwoTitle}`}\r\n    </p>\r\n      {!(location.pathname.includes('/site/abbreviation') || location.pathname.includes('/site/biblio')) && (\r\n        <div>\r\n          <button className=\"backButton\" onClick={() => navigate(-1)}>\r\n            ←\r\n          </button>    \r\n        </div>\r\n      )}\r\n      <h1>{pageTitle}</h1>\r\n      {content.map((item, index) => (\r\n        <div key={index}>\r\n          {(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) ? (\r\n            <>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n              <div dangerouslySetInnerHTML={{ __html: item.a_text }} />\r\n            </>\r\n          ) : shouldDisplayTitle() && !location.pathname.includes('/site/photo/') ? (\r\n            <Link to={`/site/article/${item.a_id}`} style={{ color: 'black' }}>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n            </Link>\r\n          ) : null}\r\n          {!(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) ? (\r\n            location.pathname.includes('/site/photo') || location.pathname.includes('/site/article') ? (\r\n              <div className=\"desc\">{renderContentWithImages(item.a_text)}</div>\r\n            ) : (\r\n              <div className=\"desc\" dangerouslySetInnerHTML={{ __html: item.a_desc || item.a_text }} />\r\n            )\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n      {(location.pathname.includes('/occupation/verigin') || location.pathname.includes('/site/article/83')) && (\r\n        <ul>\r\n          {files.map((file, index) => (\r\n            <li key={index}>\r\n              <a href={file.http_path} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: 'black' }}>{file.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {isImageModalOpen && (\r\n      <div className=\"imageModal\" onClick={() => setIsImageModalOpen(false)}>\r\n        <span className=\"close\" onClick={() => setIsImageModalOpen(false)}>&times;</span>\r\n        <img src={currentImageUrl} className=\"modalContent\" alt=\"Enlarged view\" />\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default ContentPageMultiple;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}