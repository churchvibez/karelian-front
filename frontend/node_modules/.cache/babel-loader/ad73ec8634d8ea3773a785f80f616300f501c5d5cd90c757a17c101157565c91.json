{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param1,\n    param2\n  } = useParams();\n  const location = useLocation();\n  const [content, setContent] = useState([]);\n  const [pageTitle, setPageTitle] = useState('');\n  const [files, setFiles] = useState([]);\n  const letterMappingAbbreviations = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    J: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    E: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  const letterMappingBibliography = {\n    A: 'А',\n    B: 'Б',\n    V: 'В',\n    G: 'Г',\n    D: 'Д',\n    E: 'Е',\n    ZH: 'Ж',\n    Z: 'З',\n    I: 'И',\n    K: 'К',\n    L: 'Л',\n    M: 'М',\n    N: 'Н',\n    O: 'О',\n    P: 'П',\n    R: 'Р',\n    S: 'С',\n    T: 'Т',\n    U: 'У',\n    F: 'Ф',\n    H: 'Х',\n    C: 'Ц',\n    CH: 'Ч',\n    SH: 'Ш',\n    SCH: 'Щ',\n    Y: 'Ы',\n    YE: 'Э',\n    YU: 'Ю',\n    YA: 'Я'\n  };\n  useEffect(() => {\n    const fetchContent = async () => {\n      let url = '';\n\n      // Checking if we're on a bibliography page by looking for 'biblio' in the path\n      if (location.pathname.includes('/site/biblio')) {\n        const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\n        fetchBibliographyArticles(russianLetter);\n        return; // Exit early since we're handling bibliography content\n      } else if (location.pathname.includes('/site/article/')) {\n        // Fetch article by ID\n        fetchArticleByAId(param2);\n        return;\n      } else if (location.pathname.includes('abbreviation')) {\n        // Handle abbreviation content\n        const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\n        fetchAbbreviations(russianLetter);\n        return;\n      } else if (location.pathname.includes('/occupation/verigin')) {\n        fetchFilesForRange(3, 7);\n      } else {\n        url = `http://localhost:1337/paths/${param1}/${param2}`;\n      }\n      adjustPageTitleBasedOnPath();\n      try {\n        if (url) {\n          const response = await fetch(url);\n          const data = await response.json();\n          setContent(data);\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n      }\n    };\n    fetchContent();\n  }, [param1, param2, location.pathname, location.search]);\n  const fetchFilesForRange = async (startId, endId) => {\n    try {\n      const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\n      const data = await response.json();\n      setFiles(data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n  const adjustPageTitleBasedOnPath = () => {\n    const queryParams = new URLSearchParams(location.search);\n    const titleFromQuery = queryParams.get('title');\n    if (titleFromQuery) {\n      setPageTitle(titleFromQuery);\n    } else if (location.pathname.includes('/site/commander/front')) {\n      setPageTitle(\"Командующие Карельским фронтом\");\n    } else {\n      setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\n    }\n  };\n  const fetchAbbreviations = letter => {\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`).then(response => response.json()).then(data => {\n      console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\n      setContent(data);\n    }).catch(error => console.error('Error fetching abbreviations:', error));\n  };\n  const fetchArticleByAId = async aId => {\n    try {\n      const response = await fetch(`http://localhost:1337/site/article/${aId}`);\n      const data = await response.json();\n      console.log(\"Fetched data:\", data);\n      if (location.pathname.includes('/site/article/')) {\n        // If we're on a specific article page, set the pageTitle to that article's title.\n        setPageTitle(data.a_title);\n      }\n      setContent([data]); // Setting content with an array containing the fetched article\n    } catch (error) {\n      console.error('Error fetching article by ID:', error);\n    }\n  };\n  const fetchBibliographyArticles = russianLetter => {\n    // Assuming the existence of a correct API endpoint and the russianLetter is correctly mapped\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`).then(response => response.json()).then(data => {\n      setContent(data); // Assuming the API response directly provides the content array\n    }).catch(error => console.error('Error fetching bibliography articles:', error));\n  };\n  const shouldDisplayTitle = () => {\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), content.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : shouldDisplayTitle() ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/site/article/${item.a_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: item.a_title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this) : null, !(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        dangerouslySetInnerHTML: {\n          __html: item.a_desc || item.a_text\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)), location.pathname.includes('/occupation/verigin') && files.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.http_path,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"8ji91Oq4q5FGcwtWgf9fF+bLQ1E=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentPageMultiple","_s","param1","param2","location","content","setContent","pageTitle","setPageTitle","files","setFiles","letterMappingAbbreviations","A","B","V","G","D","J","ZH","Z","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SCH","Y","E","YU","YA","letterMappingBibliography","YE","fetchContent","url","pathname","includes","russianLetter","toUpperCase","fetchBibliographyArticles","fetchArticleByAId","fetchAbbreviations","fetchFilesForRange","adjustPageTitleBasedOnPath","response","fetch","data","json","error","console","search","startId","endId","queryParams","URLSearchParams","titleFromQuery","get","charAt","slice","letter","then","log","catch","aId","a_title","shouldDisplayTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","dangerouslySetInnerHTML","__html","a_text","to","a_id","a_desc","length","file","href","http_path","target","rel","title","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, Link } from 'react-router-dom';\r\n\r\nconst ContentPageMultiple = () => {\r\n  const { param1, param2 } = useParams();\r\n  const location = useLocation();\r\n  const [content, setContent] = useState([]);\r\n  const [pageTitle, setPageTitle] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  \r\n  const letterMappingAbbreviations = {\r\n  A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', J: 'Е', ZH: 'Ж', Z: 'З',\r\n  I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n  S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n  SCH: 'Щ', Y: 'Ы', E: 'Э', YU: 'Ю', YA: 'Я', };\r\n  const letterMappingBibliography = {\r\n    A: 'А', B: 'Б', V: 'В', G: 'Г', D: 'Д', E: 'Е', ZH: 'Ж', Z: 'З',\r\n    I: 'И', K: 'К', L: 'Л', M: 'М', N: 'Н', O: 'О', P: 'П', R: 'Р',\r\n    S: 'С', T: 'Т', U: 'У', F: 'Ф', H: 'Х', C: 'Ц', CH: 'Ч', SH: 'Ш',\r\n    SCH: 'Щ', Y: 'Ы', YE: 'Э', YU: 'Ю', YA: 'Я', };\r\n\r\n    useEffect(() => {\r\n      const fetchContent = async () => {\r\n        let url = '';\r\n    \r\n        // Checking if we're on a bibliography page by looking for 'biblio' in the path\r\n        if (location.pathname.includes('/site/biblio')) {\r\n          const russianLetter = letterMappingBibliography[param2.toUpperCase()] || param2;\r\n          fetchBibliographyArticles(russianLetter);\r\n          return; // Exit early since we're handling bibliography content\r\n        } else if (location.pathname.includes('/site/article/')) {\r\n          // Fetch article by ID\r\n          fetchArticleByAId(param2);\r\n          return;\r\n        } else if (location.pathname.includes('abbreviation')) {\r\n          // Handle abbreviation content\r\n          const russianLetter = letterMappingAbbreviations[param2.toUpperCase()] || param2;\r\n          fetchAbbreviations(russianLetter);\r\n          return;\r\n        } else if (location.pathname.includes('/occupation/verigin'))\r\n        {\r\n            fetchFilesForRange(3, 7);\r\n        }\r\n        else \r\n        {\r\n          url = `http://localhost:1337/paths/${param1}/${param2}`;\r\n        }\r\n        adjustPageTitleBasedOnPath();\r\n        try {\r\n          if (url) {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setContent(data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching content:', error);\r\n        }\r\n      };\r\n      fetchContent();\r\n    }, [param1, param2, location.pathname, location.search]);\r\n\r\n    const fetchFilesForRange = async (startId, endId) => {\r\n      try {\r\n        const response = await fetch(`http://localhost:1337/files/range/${startId}/${endId}`);\r\n        const data = await response.json();\r\n        setFiles(data);\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    };\r\n    \r\n    const adjustPageTitleBasedOnPath = () => {\r\n      const queryParams = new URLSearchParams(location.search);\r\n      const titleFromQuery = queryParams.get('title');\r\n      if (titleFromQuery) {\r\n        setPageTitle(titleFromQuery);\r\n      } else if (location.pathname.includes('/site/commander/front')) {\r\n        setPageTitle(\"Командующие Карельским фронтом\");\r\n      } else {\r\n        setPageTitle(param2.charAt(0).toUpperCase() + param2.slice(1));\r\n      }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n  const fetchAbbreviations = (letter) => {\r\n    const russianLetter = letterMappingAbbreviations[letter.toUpperCase()] || letter;\r\n    fetch(`http://localhost:1337/site/abbreviation/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(`Fetching from URL: http://localhost:1337/site/abbreviation/${russianLetter}`);\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching abbreviations:', error));\r\n  };\r\n  \r\n  const fetchArticleByAId = async (aId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:1337/site/article/${aId}`);\r\n      const data = await response.json();\r\n      console.log(\"Fetched data:\", data);\r\n      if (location.pathname.includes('/site/article/')) {\r\n        // If we're on a specific article page, set the pageTitle to that article's title.\r\n        setPageTitle(data.a_title);\r\n      }\r\n      setContent([data]); // Setting content with an array containing the fetched article\r\n    } catch (error) {\r\n      console.error('Error fetching article by ID:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchBibliographyArticles = (russianLetter) => {\r\n    // Assuming the existence of a correct API endpoint and the russianLetter is correctly mapped\r\n    fetch(`http://localhost:1337/site/biblio/${russianLetter}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setContent(data); // Assuming the API response directly provides the content array\r\n      })\r\n      .catch(error => console.error('Error fetching bibliography articles:', error));\r\n  };\r\n  \r\n\r\n\r\n  const shouldDisplayTitle = () => {\r\n    return !location.pathname.includes('/site/commander/front') && !location.pathname.includes('/site/article') && !location.pathname.includes('/site/occupation/verigin') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/kulagin/') && !location.pathname.includes('/site/partisan/biblio/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      <h1>{pageTitle}</h1>\r\n      {content.map((item, index) => (\r\n        <div key={index}>\r\n          {/* For /site/biblio and /site/abbreviation paths, display titles without links */}\r\n          {(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) ? (\r\n            <>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n              <div dangerouslySetInnerHTML={{ __html: item.a_text }} />\r\n            </>\r\n          ) : shouldDisplayTitle() ? (\r\n            <Link to={`/site/article/${item.a_id}`}>\r\n              <h3 dangerouslySetInnerHTML={{ __html: item.a_title }} />\r\n            </Link>\r\n          ) : null}\r\n          {/* Only display 'desc' div if item.a_desc or item.a_text is available, and we're not in a /site/biblio or /site/abbreviation path */}\r\n          {!(location.pathname.includes('/site/biblio') || location.pathname.includes('/site/abbreviation')) && (\r\n            <div className=\"desc\" dangerouslySetInnerHTML={{ __html: item.a_desc || item.a_text }} />\r\n          )}\r\n        </div>\r\n      ))}\r\n      {location.pathname.includes('/occupation/verigin') && files.length > 0 && (\r\n        <ul>\r\n          {files.map((file, index) => (\r\n            <li key={index}>\r\n              <a href={file.http_path} target=\"_blank\" rel=\"noopener noreferrer\">{file.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n  \r\n};\r\n\r\nexport default ContentPageMultiple;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}