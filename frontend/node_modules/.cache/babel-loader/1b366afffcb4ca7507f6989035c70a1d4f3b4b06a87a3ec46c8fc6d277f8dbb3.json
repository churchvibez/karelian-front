{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\Year 3\\\\Semester 2\\\\TPPO\\\\website\\\\frontend\\\\src\\\\ContentPageMultiple.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { contentMultipleCategoryContent } from './apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentPageMultiple = () => {\n  _s();\n  const {\n    param1,\n    param2\n  } = useParams();\n  const [content, setContent] = useState({\n    a_title: '',\n    a_text: ''\n  });\n  useEffect(() => {\n    const letter = param2 || ''; // If param2 is not defined, default to empty string\n    fetchCategoryContent(param1, letter);\n  }, [param1, param2]);\n  const fetchCategoryContent = (param1, letter) => {\n    // Directly constructing the URL based on the presence of a letter parameter\n    const baseUrl = 'http://localhost:1337/site'; // Assuming your backend is running on port 1337\n    const url = letter ? `${baseUrl}/${param1}/${letter}` : `${baseUrl}/${param1}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setContent(data);\n    }).catch(error => console.error('Error fetching content:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: content.a_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: content.a_text\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentPageMultiple, \"BroH+5iNIIG1qMXd05LDPRpbfSc=\", false, function () {\n  return [useParams];\n});\n_c = ContentPageMultiple;\nexport default ContentPageMultiple;\nvar _c;\n$RefreshReg$(_c, \"ContentPageMultiple\");","map":{"version":3,"names":["React","useState","useEffect","useParams","contentMultipleCategoryContent","jsxDEV","_jsxDEV","ContentPageMultiple","_s","param1","param2","content","setContent","a_title","a_text","letter","fetchCategoryContent","baseUrl","url","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/University/Year 3/Semester 2/TPPO/website/frontend/src/ContentPageMultiple.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport {contentMultipleCategoryContent} from './apiConfig'\r\n\r\nconst ContentPageMultiple = () => {\r\n  const { param1, param2 } = useParams();\r\n  const [content, setContent] = useState({a_title: '', a_text: ''});\r\n\r\n  useEffect(() => {\r\n    const letter = param2 || ''; // If param2 is not defined, default to empty string\r\n    fetchCategoryContent(param1, letter);\r\n  }, [param1, param2]);\r\n\r\n  const fetchCategoryContent = (param1, letter) => {\r\n    // Directly constructing the URL based on the presence of a letter parameter\r\n    const baseUrl = 'http://localhost:1337/site'; // Assuming your backend is running on port 1337\r\n    const url = letter ? `${baseUrl}/${param1}/${letter}` : `${baseUrl}/${param1}`;\r\n\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setContent(data);\r\n      })\r\n      .catch(error => console.error('Error fetching content:', error));\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"generalPages\">\r\n      <h2>{content.a_title}</h2>\r\n      <div dangerouslySetInnerHTML={{ __html: content.a_text }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ContentPageMultiple;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,8BAA8B,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAACY,OAAO,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAEjEZ,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGL,MAAM,IAAI,EAAE,CAAC,CAAC;IAC7BM,oBAAoB,CAACP,MAAM,EAAEM,MAAM,CAAC;EACtC,CAAC,EAAE,CAACN,MAAM,EAAEC,MAAM,CAAC,CAAC;EAEpB,MAAMM,oBAAoB,GAAGA,CAACP,MAAM,EAAEM,MAAM,KAAK;IAC/C;IACA,MAAME,OAAO,GAAG,4BAA4B,CAAC,CAAC;IAC9C,MAAMC,GAAG,GAAGH,MAAM,GAAI,GAAEE,OAAQ,IAAGR,MAAO,IAAGM,MAAO,EAAC,GAAI,GAAEE,OAAQ,IAAGR,MAAO,EAAC;IAE9EU,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZX,UAAU,CAACW,IAAI,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC;EAGC,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,EAAKjB,OAAO,CAACE;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1B1B,OAAA;MAAK2B,uBAAuB,EAAE;QAAEC,MAAM,EAAEvB,OAAO,CAACG;MAAO;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7BID,mBAAmB;EAAA,QACIJ,SAAS;AAAA;AAAAgC,EAAA,GADhC5B,mBAAmB;AAgCzB,eAAeA,mBAAmB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}